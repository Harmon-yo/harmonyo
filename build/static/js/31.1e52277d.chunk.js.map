{"version":3,"file":"static/js/31.1e52277d.chunk.js","mappings":"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","sources":["components/Global/CardFeedback/index.jsx","pages/Global/TelaFeedbacks/index.jsx"],"sourcesContent":["import { Box, Typography, Rating} from \"@mui/material\";\nimport \"./style.css\";\n\nimport { useState, useEffect } from \"react\";\nimport AvatarUsuario from \"../../../components/Global/AvatarComFoto\";\n\n\nfunction CardFeedback(props) {\n\n    return(\n        <>\n            <Box className={\"container-feedback\"}>\n                <Box className={\"box-ft-avaliador\"}>\n                    <AvatarUsuario\n                        id={props.id}\n                        className=\"avatar-usuario\"\n                        nome={\"\"}\n                    />\n                </Box>\n                <Box className={\"box-info-avaliacao\"}>\n                    <Typography className=\"txt-nome-avaliador\">{props.nome}</Typography>\n                    <Box className=\"box-avaliacao-data\">\n                                <Typography sx={{fontWeight: \"bold\"}}>{props.valorAvaliacao.toFixed(2)}</Typography>\n                                <Rating name=\"half-rating-read\" defaultValue={0} precision={0.5} readOnly size=\"medium\" value={props.valorAvaliacao} />\n                                <Typography>{props.dataAvaliacao}</Typography>\n                    </Box>\n                    <Typography className=\"txt-avaliacao\">\n                        {props.txtAvaliacao}\n                    </Typography>\n\n                </Box>\n            </Box>    \n        </>\n    )\n}\n\nexport default CardFeedback;","import EstruturaPaginaUsuario from \"../../../components/Global/EstruturaPaginaUsuario/Main\";\nimport { Box, Typography, Rating, CircularProgress } from \"@mui/material\";\nimport \"./style.css\";\nimport api from \"../../../api.js\";\nimport { useState, useEffect } from \"react\";\nimport AvatarComFoto from \"../../../components/Global/AvatarComFoto\";\nimport CardFeedback from \"../../../components/Global/CardFeedback\";\n\nfunction TelaFeedbacks() {\n\n    const [dadosCarregados, setDadosCarregados] = useState(false)\n\n    const [dadosUsuario, setDadosUsuario] = useState({\n        id: sessionStorage.getItem(\"ID\"),\n        nome: \"\",\n        avaliacaoMedia: 0,\n        feedbackRecebidos: []\n    })\n\n    useEffect(() => {\n        api.get(`/usuarios/${dadosUsuario.id}/avaliacoes-recebidas`, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` } })\n            .then(response => {\n                let dados = response.data;\n\n                console.log(dados)\n\n                setDadosUsuario({ ...dadosUsuario, nome: dados.nome, avaliacaoMedia: dados.avaliacaoMedia, feedbackRecebidos: dados.avaliacoes })\n\n                setDadosCarregados(true)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [])\n\n    \n    return (\n        <>\n            <EstruturaPaginaUsuario>\n                <Box className={\"container-pagina-feedbacks\"}>\n                    <Box className={\"container-ft-perfil-e-feedbacks\"}>\n                        <Box className={\"box-ft-perfil\"}>\n\n                            {\n                                dadosCarregados ?\n\n                                    <>\n                                        <AvatarComFoto\n                                            id={sessionStorage.getItem(\"ID\")}\n                                            className=\"ft-perfil\"\n                                            nome={\"\"}\n                                        />\n                                        <Box className=\"box-avaliacao\">\n                                            <Typography sx={{ fontWeight: \"bold\" }}>{dadosUsuario.avaliacaoMedia.toFixed(2)}</Typography>\n                                            <Rating name=\"half-rating-read\" defaultValue={0} precision={0.5} readOnly size=\"medium\" value={dadosUsuario.avaliacaoMedia} />\n                                        </Box>\n                                        <Typography className=\"txt-nome\">{dadosUsuario.nome}</Typography>\n                                    </>\n\n                                : \n                                    <>\n                                        <Typography variant=\"h6\" sx={{width: \"80%\", textAlign: \"center\"}}>Carregando informações</Typography>\n                                        <CircularProgress style={{ color: \"#16B364\" }} />\n                                    </>\n                            }\n\n\n                        </Box>\n                        <Box className={\"box-feedbacks\"}>\n\n                            {\n\n                                dadosCarregados ?\n                                    dadosUsuario.feedbackRecebidos.length > 0 ?\n                                        dadosUsuario.feedbackRecebidos.map((avaliacao, i) =>\n\n                                            <>\n                                                <CardFeedback index={i}\n                                                    id={avaliacao.idAvaliador}\n                                                    nome={avaliacao.nomeAvaliador}\n                                                    valorAvaliacao={avaliacao.valorAvaliacao}\n                                                    dataAvaliacao={avaliacao.dataAvaliacaoFormatada}\n                                                    txtAvaliacao={avaliacao.comentario}\n                                                />\n                                                <Box className=\"linha-divisao-pagina\" />\n                                            </>\n                                        )\n                                        :\n                                        <>\n                                            <Typography variant=\"h4\" sx={{ marginTop: \"50px\", marginBottom: \"50px\" }}>Você ainda não possui avaliações</Typography>\n                                            <Box className=\"linha-divisao-pagina\" />\n                                        </>\n                                    :\n                                    <>\n                                        <Typography variant=\"h5\" sx={{marginTop: \"50px\", marginBottom: \"50px\",}}>Carregando Avaliações</Typography>\n                                        <CircularProgress style={{ color: \"#16B364\"}} />\n                                    </>\n                            }\n                        </Box>\n                    </Box>\n                </Box>\n            </EstruturaPaginaUsuario>\n        </>\n    )\n}\n\nexport default TelaFeedbacks;"],"names":["props","_jsx","_Fragment","children","_jsxs","Box","className","AvatarUsuario","id","nome","Typography","sx","fontWeight","valorAvaliacao","toFixed","Rating","name","defaultValue","precision","readOnly","size","value","dataAvaliacao","txtAvaliacao","_useState","useState","_useState2","_slicedToArray","dadosCarregados","setDadosCarregados","_useState3","sessionStorage","getItem","avaliacaoMedia","feedbackRecebidos","_useState4","dadosUsuario","setDadosUsuario","useEffect","api","concat","headers","Authorization","TOKEN","then","response","dados","data","console","log","_objectSpread","avaliacoes","catch","err","EstruturaPaginaUsuario","AvatarComFoto","variant","width","textAlign","CircularProgress","style","color","length","map","avaliacao","i","CardFeedback","index","idAvaliador","nomeAvaliador","dataAvaliacaoFormatada","comentario","marginTop","marginBottom"],"sourceRoot":""}