{"version":3,"file":"static/js/466.6593c179.chunk.js","mappings":"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","sources":["components/Global/AvatarComFoto/index.jsx","components/Chat/ChatHeader/index.jsx","components/Chat/ChatInput/index.jsx","components/Chat/CaixaMensagem/index.jsx","components/Chat/DivisorDate/index.jsx","components/Chat/MessagesContainer/index.jsx","components/Chat/ChatInputBloqueado/index.jsx","components/Chat/ChatContainer/index.jsx","components/Chat/ProfileChat/index.jsx","components/Chat/ChatItem/index.jsx","components/Chat/ChatList/index.jsx","pages/Global/Chat/Chat.jsx","utils/firebase.js","utils/utils.js"],"sourcesContent":["import { Avatar } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { storage } from \"../../../utils/firebase\";\nimport { useImperativeHandle, forwardRef } from \"react\";\n\nfunction AvatarComFoto(props, ref) {\n    \n    const idUsuario = props.id;\n    const nomeUsuario = props.nome;\n\n    const [imgPerfilURL, setImgPerfilURL] = useState(\"\");\n    const [carregarImagem, setCarregarImagem] = useState(false);\n    const [erroAoCarregar, setErroAoCarregar] = useState(false);\n\n    useImperativeHandle(ref, () =>  { return {\n        getImgPerfilURL: () => {return imgPerfilURL}\n    }}, [imgPerfilURL]);\n\n    const obterImgPerfil = (id) => {\n        let urlImg = `/imgs-perfil-usuario/${id}_ft_perfil`;\n\n        storage.ref(urlImg).getDownloadURL()\n            .then(url => {\n                setImgPerfilURL(url)\n                setCarregarImagem(true);\n            }).catch(() => {\n                setErroAoCarregar(true);\n            });\n    }\n\n    useEffect(() => {\n        if (props.naoCarregar) {\n            if (!props.imgUrl) {\n                obterImgPerfil(idUsuario);\n            } else {\n                setImgPerfilURL(props.imgUrl);\n            }\n        }\n    }, []);\n\n    useEffect(() => {\n        if (props.imgUrl) {\n            setImgPerfilURL(props.imgUrl);\n            setErroAoCarregar(false);\n        } else {\n            obterImgPerfil(idUsuario);\n        }\n    }, [props.recarregarImg]);\n    \n    const corDeFundoPerfil = erroAoCarregar ? \"#099250\" : \"#eeeeee\";\n\n    const sxAdicional = props.sx ? props.sx : {};\n    sxAdicional[\"bgcolor\"] = corDeFundoPerfil;\n\n    return !erroAoCarregar ?\n        (<Avatar src={erroAoCarregar ? null : imgPerfilURL}\n            className={props.className}\n            onClick={props.onClick}\n            aria-controls={props.ariaControls}\n            aria-haspopup={props.ariaHaspopup}\n            aria-expanded={props.ariaExpanded}\n            sx={sxAdicional}>\n            {erroAoCarregar ? nomeUsuario.charAt(0) : \"\"}\n        </Avatar>) : (<Avatar\n            className={props.className}\n            onClick={props.onClick}\n            aria-controls={props.ariaControls}\n            aria-haspopup={props.ariaHaspopup}\n            aria-expanded={props.ariaExpanded}\n            sx={sxAdicional}>\n            {erroAoCarregar ? nomeUsuario.charAt(0) : \"\"}\n        </Avatar>);\n\n}\n\nexport default forwardRef(AvatarComFoto);","import React from \"react\";\nimport {\n  Divider,\n  Grid,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  TextField,\n  Avatar,\n  List,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport SmsFailedIcon from \"@mui/icons-material/SmsFailed\";\nimport \"./style.css\";\nimport { denunciarUsuario } from \"../../../utils/utils\";\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@mui/material\";\nimport AvatarComFoto from \"../../Global/AvatarComFoto\";\n\nexport default function ChatHeader(props) {\n  const [open, setOpen] = React.useState(props.abreModal);\n  const [denuncia, setDenuncia] = React.useState(\"\");\n  const [outro, setOutro] = React.useState(\"\");\n  const [ehOutro, setEhOutro] = React.useState(false);\n  const [erro, setErro] = React.useState(false);\n  const handleChange = (event) => {\n    if (event.target.value === 3) {\n      setEhOutro(true);\n    }\n    if (event.target.value !== null) {\n      setErro(false);\n    }\n    setDenuncia(event.target.value);\n  };\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => {\n    setOpen(false);\n    setDenuncia(\"\");\n    setOutro(\"\");\n    setEhOutro(false);\n  };\n\n  const denunciar = () => {\n\n   \n    if (ehOutro) {\n     \n      if (outro === \"\") {\n        setErro(true);\n        return;\n      }\n      setErro(false);\n    } else if (denuncia === \"\") {\n      setErro(true);\n      return;\n    }\n    var objetoDenuncia = {\n      motivo: outro? outro: denuncia,\n      idDenunciante: Number(sessionStorage.ID),\n      idDenunciado: props.idUsuarioConversa,\n      idConversa: props.idConversa\n    }\n    denunciarUsuario(objetoDenuncia)\n    handleClose();\n  };\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          Gostaria de denunciar {props.nome}?\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Qual o motivo da denúncia?\n          </DialogContentText>\n          <FormControl fullWidth>\n            <InputLabel id=\"demo-simple-select-label\">\n              Motivo da denúncia\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={denuncia}\n              label=\"Motivo da denúncia\"\n              onChange={handleChange}\n              error={erro}\n            >\n              <MenuItem value={\"Bullying e assédio\"}>Bullying e assédio</MenuItem>\n              <MenuItem value={\"Palavras ofensivas\"}>Palavras ofensivas</MenuItem>\n              <MenuItem value={\"Informações incorretas prejudiciais\"}>Informações incorretas prejudiciais</MenuItem>\n              <MenuItem value={3}>Outro</MenuItem>\n            </Select>\n            {ehOutro ? (\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Outro motivo\"\n                variant=\"outlined\"\n                value={outro}\n                error={erro}\n                helperText={erro ? \"Digite o motivo da denúncia\" : \"\"}\n                onChange={(e) => setOutro(e.target.value)}\n              />\n            ) : (\n              <></>\n            )}\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Não</Button>\n          <Button onClick={denunciar} autoFocus>\n            Sim, denunciar\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Grid item xs={3} style={{ borderRight: \"500\" }}>\n        <List className=\"chat_header\">\n          <ListItem key={props.nome}>\n            <ListItemIcon>\n            <AvatarComFoto\n            id={props.idUsuarioConversa}\n            nome={props.nome}\n            className=\"avatar\"\n          />\n            </ListItemIcon>\n            <ListItemText primary={props.nome}></ListItemText>\n          </ListItem>\n          <ListItem\n            key={0}\n            style={{ width: \"min-content\", marginRight: \"10px\" }}\n            button\n            onClick={handleOpen}\n          >\n            <SmsFailedIcon style={{fontSize: \"40px\"}}/>\n          </ListItem>\n        </List>\n        <Divider />\n      </Grid>\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  Fab,\n  Grid,\n  InputBase,\n} from \"@mui/material\";\nimport Send from \"@mui/icons-material/Send\";\n\nexport default function ChatInput(props) {\n\n\n\n  return (\n    <Grid container style={{ padding: \"20px\" }}>\n      <Grid item xs={11}>\n        <InputBase\n          sx={{ ml: 1, flex: 1 }}\n          placeholder=\"Insira aqui a sua mensagem\"\n          fullWidth\n          autoFocus={true}\n          multiline\n          rows={2}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") {\n              e.preventDefault()\n              props.onClick()\n            }\n          }}\n          onChangeCapture={(e) => props.onChange(e.target.value)}\n          value={props.value}\n          style={{ border: \"1px solid #ccc\", borderRadius: \"5px\", padding: \"10px\" }}\n        />\n      </Grid>\n      <Grid xs={1} align=\"right\" onClick={() => props.onClick()} >\n        <Fab color=\"rgba(29, 185, 84, 0.25)\" aria-label=\"add\">\n          <Send />\n        </Fab>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { Grid, ListItem, ListItemText } from \"@mui/material\";\nimport { Timestamp } from \"firebase/firestore\";\nimport \"./style.css\";\n\nexport default function CaixaMensagem(props) {\n  var posicao = \"left\";\n\n  if (props.idEnviou === Number(sessionStorage.getItem(\"ID\"))) {\n    posicao = \"right\";\n  }\n  var data;\n  if (props.timestamp !== null) {\n    data = new Timestamp(\n      props.timestamp.seconds,\n      props.timestamp.nanoseconds\n    ).toDate();\n  }else{\n    console.log(props)\n    data = new Date();\n  }\n\n  const hora = data.getHours() < 10 ? \"0\" + data.getHours() : data.getHours();\n  const minuto =\n    data.getMinutes() < 10 ? \"0\" + data.getMinutes() : data.getMinutes();\n  const horario = hora + \":\" + minuto;\n\n  if (posicao === \"left\") {\n    return (\n      <ListItem key={props.key} style={{ maxWidth: \"50%\" }}>\n        <Grid container>\n          <Grid\n            item\n            xs={12}\n            style={{maxWidth: \"fit-content\"}}\n            className=\"esquerda_mensagem\"\n          >\n            <ListItemText\n              align=\"left\"\n              primary={props.texto}\n              style={{\n                wordWrap: \"break-word\",\n                width: \"fit-content\",\n              }}\n            ></ListItemText>\n          </Grid>\n          <Grid item xs={12}>\n            <ListItemText align=\"left\" secondary={horario}></ListItemText>\n          </Grid>\n        </Grid>\n      </ListItem>\n    );\n  } else {\n    return (\n      <ListItem\n        key={props.key}\n        style={{ maxWidth: \"50%\", alignSelf: \"flex-end\" }}\n      >\n        <Grid\n          container\n          style={{\n            justifyContent: \"flex-end\",\n          }}\n        >\n          <Grid\n            item\n            xs={12}\n            style={{maxWidth: \"fit-content\"}}\n            className=\"direita_mensagem\"\n          >\n            <ListItemText\n              align=\"left\"\n              primary={props.texto}\n              style={{\n                wordWrap: \"break-word\",\n                width: \"fit-content\",\n              }}\n            ></ListItemText>\n          </Grid>\n          <Grid item xs={12}>\n            <ListItemText align=\"right\" secondary={horario}></ListItemText>\n          </Grid>\n        </Grid>\n      </ListItem>\n    );\n  }\n}\n","import { ListItemText, Box } from \"@mui/material\";\nimport React from \"react\";\nimport \"./style.css\";\n\nexport default function DivisorDate(props) {\n  \n  if(props.data === \"00/00/0000\"){\n    return(\n      <></>\n    )\n  }\n  return (\n    <Box className=\"divisor\">\n        <Box className=\"data_centralizada\">\n            <Box className=\"linha\"></Box>\n            <Box className=\"data\">\n                <ListItemText primary={props.data}/>\n                </Box>\n            <Box className=\"linha\"></Box>\n        </Box>\n    </Box>\n  );\n}\n","import React, { useRef, useEffect } from \"react\";\nimport CaixaMensagem from \"../CaixaMensagem/index.jsx\"\nimport DivisorDate from \"../DivisorDate/index.jsx\";\nimport {db} from \"../../../utils/firebase.js\";\nimport \"./style.css\";\nimport { Box } from \"@mui/material\";\nimport {\n  fromDateToFormatDate,\n  fromTimestampToFormatDate,\n} from \"../../../utils/utils.js\";\nimport { CircularProgress } from \"@mui/material\";\n\nexport default function MessagesContainer(props) {\n  const [mensagens, setMensagens] = React.useState([]);\n  const [carregouMensagens, setCarregouMensagens] = React.useState(false);\n  var contador = 0;\n  var ultimaData = \"\";\n  const refDiv = useRef(null);\n\n  useEffect(() => {\n    setCarregouMensagens(false);\n    const unsubscribe = db\n      .doc(`chats/${props.id}`)\n      .collection(\"mensagens\")\n      .orderBy(\"timestamp\", \"asc\")\n      .onSnapshot((snapshot) => {\n        setMensagens([]);\n        snapshot.docs.map((doc) => {\n          setMensagens((mensagens) => [\n            ...mensagens,\n            {\n              id: doc.id,\n              idEnviou: doc.data().idEnviou,\n              texto: doc.data().texto,\n              timestamp: doc.data().timestamp,\n              lida: doc.data().lida,\n            },\n          ]);\n        });\n        setCarregouMensagens(true);\n      });\n\n    return () => unsubscribe();\n  }, [props.id]);\n\n  useEffect(() => {\n    if (refDiv.current) {\n      refDiv.current.scrollTop = refDiv.current.scrollHeight;\n    }\n  }, [mensagens]);\n\n  if (carregouMensagens) {\n    return (\n      <Box ref={refDiv} className=\"messageBoxContainer\">\n        {mensagens.map((mensagem) => {\n          if (!mensagem.lida) {\n            db.doc(`chats/${props.id}`)\n              .collection(\"mensagens\")\n              .doc(mensagem.id)\n              .update({\n                lida: true,\n              });\n          }\n\n          contador++;\n\n          if (\n            contador === 1 ||\n            ultimaData !== fromTimestampToFormatDate(mensagem.timestamp)\n          ) {\n            ultimaData = fromTimestampToFormatDate(mensagem.timestamp);\n            var dataExibir = \"\";\n            if (\n              fromTimestampToFormatDate(mensagem.timestamp) ===\n              fromDateToFormatDate(new Date())\n            ) {\n              dataExibir = \"Hoje\";\n            } else if (\n              fromTimestampToFormatDate(mensagem.timestamp) ===\n              fromDateToFormatDate(\n                new Date(new Date().setDate(new Date().getDate() - 1))\n              )\n            ) {\n              dataExibir = \"Ontem\";\n            } else {\n              dataExibir = fromTimestampToFormatDate(mensagem.timestamp);\n            }\n\n            return (\n              <>\n                <DivisorDate data={dataExibir} />\n                <CaixaMensagem\n                  key={mensagem.id}\n                  id={mensagem.id}\n                  idEnviou={mensagem.idEnviou}\n                  texto={mensagem.texto}\n                  timestamp={mensagem.timestamp}\n                />\n              </>\n            );\n          }\n\n          return (\n            <CaixaMensagem\n              key={mensagem.id}\n              id={mensagem.id}\n              idEnviou={mensagem.idEnviou}\n              texto={mensagem.texto}\n              timestamp={mensagem.timestamp}\n              onLoad={() => console.log(\"aaa\")}\n            />\n          );\n        })}\n      </Box>\n    );\n  } else {\n    return (\n      <Box style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <CircularProgress style={{ color: \"#6DDB94\" }} />\n      </Box>\n    );\n  }\n}\n","import React from 'react'\nimport \"./style.css\"\nimport { Box } from \"@mui/material\";\n\nfunction ChatInputBloqueado(props) {\n  return (\n    <Box className=\"background-bloqueado\">\n      <Box className=\"texto-bloqueado\">Sua conversa com {props.nome} está bloqueada por motivo de denúncia. Por favor, caso você entenda que algo está errado, entre em contato com o nosso suporte.</Box>\n    </Box>\n  )\n}\n\nexport default ChatInputBloqueado\n","import ChatHeader from \"../ChatHeader\";\nimport ChatInput from \"../ChatInput\";\nimport { enviarMensagem } from \"../../../utils/utils\";\nimport MessagesContainer from \"../MessagesContainer\";\nimport ChatInputBloqueado from \"../ChatInputBloqueado\";\n\n\nexport default function ChatContainer(props) {\n\n\n  return (\n    <>\n      <ChatHeader idUsuarioConversa={props.idUsuarioConversa} nome={props.nome} idConversa={props.id} />\n      <MessagesContainer id={props.id} />\n      {props.isBloqueado ? <ChatInputBloqueado nome={props.nome}/> :\n        <ChatInput\n          value={props.valueInput}\n          onChange={props.onChange}\n          onClick={() => {\n\n            props.onClick();\n            if (props.valueInput !== \"\") {\n\n              enviarMensagem(props.valueInput, props.id)\n            }\n          }}\n        />\n      }\n    </>\n  );\n\n}\n","import React from \"react\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport { ListItem, Avatar, Typography, ListItemIcon } from \"@mui/material\";\nimport \"./style.css\";\nimport { storage } from \"../../../utils/firebase\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport AvatarComFoto from \"../../Global/AvatarComFoto\";\nexport default function ProfileChat() {\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <ListItem className=\"chat_profile\">\n        <ListItem\n          button\n          className=\"voltar\"\n          style={{\n            display: \"flex\",\n            justifyContent: \"left\",\n            width: \"fit-content\",\n            height: \"fit-content\",\n          }}\n          onClick={() => navigate(-1)}\n        >\n          <ArrowBackIcon\n            style={{\n              width: \"35px\",\n              height: \"35px\",\n              padding: \"5px\",\n              borderRadius: \"100%\",\n              background: \"#363636\",\n            }}\n          />\n        </ListItem>\n        <ListItemIcon>\n          <AvatarComFoto\n            id={Number(sessionStorage.ID)}\n            nome={sessionStorage.NOME}\n            className=\"avatar\"\n          />\n        </ListItemIcon>\n        <Typography variant=\"h6\" component=\"div\">\n          {sessionStorage.NOME}\n        </Typography>\n      </ListItem>\n    </>\n  );\n}\n","import {\n  Box,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Divider,\n} from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport \"./style.css\";\nimport { marcarMensagemComoLida } from \"../../../utils/utils\";\nimport { Timestamp } from \"firebase/firestore\";\nimport {\n  fromTimestampToFormatHour,\n  fromTimestampToFormatDate,\n  fromDateToFormatDate,\n} from \"../../../utils/utils\";\nimport { db } from \"../../../utils/firebase\";\nimport AvatarComFoto from \"../../Global/AvatarComFoto\";\n\nexport default function ChatItem(props) {\n  const [lida, setLida] = React.useState(props.lida);\n  const [qtdNaoLidas, setQtdNaoLidas] = React.useState(10);\n  const [carregouNaoLidas, setCarregouNaoLidas] = React.useState(false);\n\n  useEffect(() => {\n    setCarregouNaoLidas(false);\n   \n    const unsubscribe = db\n      .collection(\"chats\")\n      .doc(props.id)\n      .collection(\"mensagens\")\n      .where(\"idEnviou\", \"!=\", Number(sessionStorage.getItem(\"ID\")))\n      .where(\"lida\", \"==\", false)\n      .onSnapshot((snapshot) => {\n        setQtdNaoLidas(snapshot.docs.length);\n        setCarregouNaoLidas(true);\n      });\n    if (carregouNaoLidas) {\n    }\n    return () => unsubscribe();\n  }, [qtdNaoLidas]);\n\n  function handleClick() {\n    props.onClick();\n    setLida(true);\n    marcarMensagemComoLida(props.id);\n  }\n\n  var data = new Timestamp(\n    props.timestamp?.seconds,\n    props.timestamp?.nanoseconds\n  ).toDate();\n\n  var hoje = new Date();\n\n  const isToday =\n    data.getDate() === hoje.getDate() &&\n    data.getMonth() === hoje.getMonth() &&\n    data.getFullYear() === hoje.getFullYear();\n\n  var dataFormatada = fromTimestampToFormatDate(props.timestamp);\n\n  const horario = fromTimestampToFormatHour(props.timestamp);\n\n  if (\n    fromTimestampToFormatDate(props.timestamp) ===\n    fromDateToFormatDate(new Date(new Date().setDate(new Date().getDate() - 1)))\n  ) {\n    dataFormatada = \"Ontem\";\n  }\n\n  return (\n    <>\n      <ListItem button onClick={handleClick} className=\"chat_item\">\n        <ListItemAvatar>\n          <AvatarComFoto\n            id={props.idContato}\n            nome={props.nome}\n            className=\"avatar\"\n          />\n        </ListItemAvatar>\n        <ListItemText\n          primary={props.nome}\n          secondary={\n            <Box className=\"ultima_mensagem\">{props.ultimaMensagem}</Box>\n          }\n          style={{ width: \"40%\" }}\n        />\n        <ListItemText className=\"data_box\">\n          <Box className=\"data_notificacao\">\n            <Box className=\"tempo\">{isToday ? horario : dataFormatada}</Box>\n            {qtdNaoLidas !== 0 ? (\n              <Box className=\"notificacao\">\n                <Box className=\"notificacao_numero\">{qtdNaoLidas}</Box>\n              </Box>\n            ) : null}\n          </Box>\n        </ListItemText>\n      </ListItem>\n      <Divider variant=\"fullWidth\" className=\"divider_chat\" />\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport {db, storage} from \"../../../utils/firebase\";\nimport ChatItem from \"../ChatItem\";\nimport {\n  query,\n  collection,\n  where,\n  onSnapshot,\n  or,\n  orderBy,\n} from \"firebase/firestore\";\n\nexport default function ChatList(props) {\n  const [chats, setChats] = React.useState([]);\n  const [carregouConversas, setCarregouConversas] = React.useState(false);\n\n  useEffect(() => {\n    const q = query(\n      collection(db, \"chats\"),\n      or(\n        where(\"idProfessor\", \"==\", Number(sessionStorage.ID)),\n        where(\"idAluno\", \"==\", Number(sessionStorage.ID))\n      ),\n      orderBy(\"timestamp\", \"desc\")\n    );\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      setChats(\"\");\n      setChats(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          data: {\n            idAluno: doc.data().idAluno,\n            idProfessor: doc.data().idProfessor,\n            nome:\n              sessionStorage.CATEGORIA === \"Aluno\"\n                ? doc.data().nomeProfessor\n                : doc.data().nomeAluno,\n            ultimaMensagem: doc.data().ultimaMensagem,\n            lida: doc.data().lida,\n            timestamp: doc.data().timestamp,\n            bloqueado: doc.data().bloqueado,\n            \n          },\n        }))\n      );\n    });\n \n  }, []);\n  return (\n    <>\n      \n      {chats.map((chat) => (\n        <ChatItem\n          id={chat.id}\n          key={chat.id}\n          nome={chat.data.nome}\n          ultimaMensagem={chat.data.ultimaMensagem}\n          timestamp={chat.data.timestamp}\n          lida={chat.data.lida}\n          foto={chat.data.foto}\n          onClick={() => {\n            props.onChatClick(chat);\n          }}\n          idContato={sessionStorage.CATEGORIA == \"Aluno\" ? chat.data.idProfessor : chat.data.idAluno}\n        />\n      ))}\n      \n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../../../utils/firebase\";\r\nimport \"./style.css\";\r\nimport { Box, CircularProgress } from \"@mui/material\";\r\nimport {\r\n  query,\r\n  collection,\r\n  where,\r\n  onSnapshot,\r\n  or,\r\n  orderBy,\r\n} from \"firebase/firestore\";\r\nimport ChatContainer from \"../../../components/Chat/ChatContainer\";\r\nimport ProfileChat from \"../../../components/Chat/ProfileChat\";\r\nimport ChatList from \"../../../components/Chat/ChatList\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Chat = (props) => {\r\n  const [activeChat, setActiveChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [nomeChat, setNomeChat] = useState(\"\");\r\n  const [srcChat, setSrcChat] = useState(\"\");\r\n  const [chats, setChats] = useState([]);\r\n  const [bloqueado, setBloqueado] = useState(false);\r\n  const [carregouConversas, setCarregouConversas] = useState(false);\r\n  const [idUsuarioConversa, setIdUsuarioConversa] = useState(0);\r\n  const location = useLocation();\r\n  const idChatAtivo = location.state ? location.state.idChatAtivo : null;\r\n  const chatAtivo = location.state ? location.state.chatAtivo : null;\r\n\r\n  useEffect(() => {\r\n    const q = query(\r\n      collection(db, \"chats\"),\r\n      or(\r\n        where(\"idProfessor\", \"==\", Number(sessionStorage.idUsuario)),\r\n        where(\"idAluno\", \"==\", Number(sessionStorage.idUsuario))\r\n      ),\r\n      orderBy(\"timestamp\", \"desc\")\r\n    );\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      setChats(\"\");\r\n      setChats(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: {\r\n            idAluno: doc.data().idAluno,\r\n            idProfessor: doc.data().idProfessor,\r\n            nome:\r\n              (sessionStorage.CATEGORIA === \"Aluno\") === \"aluno\"\r\n                ? doc.data().nomeProfessor\r\n                : doc.data().nomeAluno,\r\n            src:\r\n              (sessionStorage.CATEGORIA === \"Aluno\") === \"aluno\"\r\n                ? doc.data().srcProfessor\r\n                : doc.data().srcAluno,\r\n            ultimaMensagem: doc.data().ultimaMensagem,\r\n            lida: doc.data().lida,\r\n            timestamp: doc.data().timestamp,\r\n            bloqueado: doc.data().bloqueado,\r\n          },\r\n        }))\r\n      );\r\n    });\r\n\r\n    setCarregouConversas(true);\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n\r\n    if (idChatAtivo !== null && chatAtivo !== null) {\r\n      setActiveChat(idChatAtivo);\r\n      if (sessionStorage.CATEGORIA === \"Aluno\") {\r\n        setNomeChat(chatAtivo.nomeProfessor);\r\n        setIdUsuarioConversa(chatAtivo.idProfessor);\r\n      } else {\r\n        setNomeChat(chatAtivo.nomeAluno);\r\n        setIdUsuarioConversa(chatAtivo.idAluno);\r\n      }\r\n      setMessages([]);\r\n      setBloqueado(chatAtivo.bloqueado);\r\n\r\n    }\r\n  }, [chatAtivo, idChatAtivo]);\r\n  if (carregouConversas) {\r\n    return (\r\n      <>\r\n        <Box className=\"chat_page\">\r\n          <Box className=\"chat_container\">\r\n            <Box className=\"chat_left\">\r\n              <ProfileChat />\r\n\r\n              <Box className=\"chat_list_container\">\r\n                <ChatList\r\n                  onChatClick={(chat) => {\r\n                    if (sessionStorage.CATEGORIA === \"Aluno\") {\r\n                      setIdUsuarioConversa(chat.data.idProfessor);\r\n                    } else {\r\n                      setIdUsuarioConversa(chat.data.idAluno);\r\n                    }\r\n                    setActiveChat(chat.id);\r\n                    setNomeChat(chat.data.nome);\r\n                    setMessages([]);\r\n                    setBloqueado(chat.data.bloqueado);\r\n                  }}\r\n                />\r\n              </Box>\r\n            </Box>\r\n            <Box className=\"message_container\">\r\n              {activeChat ? (\r\n                <>\r\n                  <ChatContainer\r\n                    id={activeChat}\r\n                    nome={nomeChat}\r\n                    isBloqueado={bloqueado}\r\n                    valueInput={inputValue}\r\n                    idUsuarioConversa={idUsuarioConversa}\r\n                    onChange={(e) => setInputValue(e)}\r\n                    onClick={() => setInputValue(\"\")}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <Box className=\"empty_chat\">\r\n                  <p>Olá! Seja bem vindo ao chat</p>\r\n                  <p>Clique em algum chat para começar a conversar</p>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </>\r\n    );\r\n  } else {\r\n    return <CircularProgress color=\"success\" />;\r\n  }\r\n};\r\n\r\nexport default Chat;\r\n","// Import the functions you need from the SDKs you need\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBlrwBDwFdwkutdVO2Ilg6KUPnFFwKWD2k\",\r\n  authDomain: \"chat-harmonyo.firebaseapp.com\",\r\n  projectId: \"chat-harmonyo\",\r\n  storageBucket: \"chat-harmonyo.appspot.com\",\r\n  messagingSenderId: \"295019787606\",\r\n  appId: \"1:295019787606:web:eb01ac75f11c05b72d92f7\",\r\n  measurementId: \"G-2K9ZW7N0C1\"\r\n};\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = app.firestore();\r\n\r\nconst storage = app.storage(\"gs://chat-harmonyo.appspot.com/\");\r\n\r\nexport  {db, storage};","import { Timestamp, serverTimestamp } from \"firebase/firestore\";\r\nimport { db } from \"./firebase\";\r\n\r\nexport function fromTimestampToFormatDate(timestamp) {\r\n  if (timestamp == null) {\r\n    return \"00/00/0000\";\r\n  }\r\n  var dataMensagem = new Timestamp(\r\n    timestamp.seconds,\r\n    timestamp.nanoseconds\r\n  ).toDate();\r\n\r\n  const dia =\r\n    dataMensagem.getDate() < 10\r\n      ? \"0\" + dataMensagem.getDate()\r\n      : dataMensagem.getDate();\r\n  const mes =\r\n    dataMensagem.getMonth() < 10\r\n      ? \"0\" + dataMensagem.getMonth()\r\n      : dataMensagem.getMonth();\r\n\r\n  var dataMensagemFormatada =\r\n    dia + \"/\" + mes + \"/\" + dataMensagem.getFullYear();\r\n\r\n  return dataMensagemFormatada;\r\n}\r\nexport function fromDateToFormatDate(dataPassada) {\r\n  var data = new Date(dataPassada);\r\n  const dia = data.getDate() < 10 ? \"0\" + data.getDate() : data.getDate();\r\n  const mes = data.getMonth() < 10 ? \"0\" + data.getMonth() : data.getMonth();\r\n  var dataFormatada = dia + \"/\" + mes + \"/\" + data.getFullYear();\r\n\r\n  return dataFormatada;\r\n}\r\nexport function fromTimestampToFormatHour(timestamp) {\r\n  if (timestamp == null) {\r\n    return \"00/00/0000\";\r\n  }\r\n  var data = new Timestamp(timestamp.seconds, timestamp.nanoseconds).toDate();\r\n  const hora = data.getHours() < 10 ? \"0\" + data.getHours() : data.getHours();\r\n  const minuto =\r\n    data.getMinutes() < 10 ? \"0\" + data.getMinutes() : data.getMinutes();\r\n  var horaFormatada = hora + \":\" + minuto;\r\n\r\n  return horaFormatada;\r\n}\r\nexport function enviarMensagem(mensagem, id) {\r\n  const idEnviou = Number(sessionStorage.getItem(\"ID\"));\r\n  const texto = mensagem;\r\n  const timestamp = serverTimestamp();\r\n  const msgAdd = {\r\n    idEnviou: idEnviou,\r\n    timestamp: timestamp,\r\n    texto: mensagem,\r\n    lida: false,\r\n  };\r\n  db.doc(`chats/${id}`)\r\n    .collection(\"mensagens\")\r\n    .add(msgAdd)\r\n    .then(() => {\r\n      var objDiv = document.getElementById(\"scroll\");\r\n      objDiv.scrollTop = objDiv.scrollHeight;\r\n    });\r\n  db.collection(\"chats\").doc(id).update({\r\n    ultimaMensagem: texto,\r\n    timestamp: timestamp,\r\n  });\r\n}\r\nexport function marcarMensagemComoLida(id) {\r\n  db.doc(`chats/${id}`)\r\n    .collection(\"mensagens\")\r\n    .where(\"idEnviou\", \"!=\", Number(sessionStorage.getItem(\"ID\")))\r\n    .where(\"lida\", \"==\", false)\r\n    .get()\r\n    .then((snapshot) => {\r\n      snapshot.forEach((doc) => {\r\n        doc.ref.update({\r\n          lida: true,\r\n        });\r\n      });\r\n    });\r\n}\r\nexport function denunciarUsuario(objetoDenuncia) {\r\n  var idConversa = objetoDenuncia.idConversa;\r\n  delete objetoDenuncia.idConversa;\r\n  const timestamp = serverTimestamp();\r\n  objetoDenuncia.timestamp = timestamp;\r\n\r\n  db.doc(`chats/${idConversa}`)\r\n    .collection(\"denuncia\")\r\n    .add(objetoDenuncia)\r\n    .then(() => {\r\n      db.doc(`chats/${idConversa}`)\r\n        .update({\r\n          bloqueado: true,\r\n          timestamp: timestamp,\r\n          ultimaMensagem: \"Chat bloqueado!\",\r\n        })\r\n        .then(() => {\r\n          alert(\"Denuncia salva!\");\r\n          window.location.reload();\r\n        });\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n}\r\n"],"names":["AvatarComFoto","props","ref","idUsuario","id","nomeUsuario","nome","_useState","useState","_useState2","_slicedToArray","imgPerfilURL","setImgPerfilURL","_useState3","_useState4","setCarregarImagem","_useState5","_useState6","erroAoCarregar","setErroAoCarregar","useImperativeHandle","getImgPerfilURL","obterImgPerfil","urlImg","concat","storage","getDownloadURL","then","url","catch","useEffect","naoCarregar","imgUrl","recarregarImg","corDeFundoPerfil","sxAdicional","sx","_jsx","Avatar","className","onClick","ariaControls","ariaHaspopup","ariaExpanded","children","charAt","src","forwardRef","ChatHeader","_React$useState","React","abreModal","_React$useState2","open","setOpen","_React$useState3","_React$useState4","denuncia","setDenuncia","_React$useState5","_React$useState6","outro","setOutro","_React$useState7","_React$useState8","ehOutro","setEhOutro","_React$useState9","_React$useState10","erro","setErro","handleClose","_jsxs","_Fragment","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","FormControl","fullWidth","InputLabel","Select","labelId","value","label","onChange","event","target","error","MenuItem","TextField","variant","helperText","e","DialogActions","Button","objetoDenuncia","motivo","idDenunciante","Number","sessionStorage","ID","idDenunciado","idUsuarioConversa","idConversa","denunciarUsuario","autoFocus","Grid","item","xs","style","borderRight","List","ListItem","ListItemIcon","ListItemText","primary","width","marginRight","button","SmsFailedIcon","fontSize","Divider","ChatInput","container","padding","InputBase","ml","flex","placeholder","multiline","rows","onKeyDown","key","preventDefault","onChangeCapture","border","borderRadius","align","Fab","color","Send","CaixaMensagem","data","posicao","idEnviou","getItem","timestamp","Timestamp","seconds","nanoseconds","toDate","console","log","Date","horario","getHours","getMinutes","maxWidth","texto","wordWrap","secondary","alignSelf","justifyContent","DivisorDate","Box","MessagesContainer","mensagens","setMensagens","carregouMensagens","setCarregouMensagens","contador","ultimaData","refDiv","useRef","unsubscribe","db","collection","orderBy","onSnapshot","snapshot","docs","map","doc","_toConsumableArray","lida","current","scrollTop","scrollHeight","mensagem","update","fromTimestampToFormatDate","dataExibir","fromDateToFormatDate","setDate","getDate","onLoad","display","CircularProgress","ChatContainer","isBloqueado","ChatInputBloqueado","valueInput","enviarMensagem","ProfileChat","navigate","useNavigate","height","ArrowBackIcon","background","NOME","Typography","component","ChatItem","_props$timestamp","_props$timestamp2","setLida","qtdNaoLidas","setQtdNaoLidas","setCarregouNaoLidas","where","length","hoje","isToday","getMonth","getFullYear","dataFormatada","fromTimestampToFormatHour","marcarMensagemComoLida","ListItemAvatar","idContato","ultimaMensagem","ChatList","chats","setChats","q","query","or","idAluno","idProfessor","CATEGORIA","nomeProfessor","nomeAluno","bloqueado","chat","foto","onChatClick","activeChat","setActiveChat","setMessages","inputValue","setInputValue","_useState7","_useState8","nomeChat","setNomeChat","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","setBloqueado","_useState15","_useState16","carregouConversas","setCarregouConversas","_useState17","_useState18","setIdUsuarioConversa","location","useLocation","idChatAtivo","state","chatAtivo","srcProfessor","srcAluno","app","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","dataMensagem","dataPassada","serverTimestamp","msgAdd","add","objDiv","document","getElementById","get","forEach","alert","window","reload"],"sourceRoot":""}