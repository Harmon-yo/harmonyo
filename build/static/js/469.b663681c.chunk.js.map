{"version":3,"file":"static/js/469.b663681c.chunk.js","mappings":"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","sources":["components/Professor/ModalExperiencias/index.jsx","components/Professor/CardExperiencias/index.jsx","components/Global/ModalUploadFotoPerfil/index.jsx","components/Global/PerfilUsuario/FotoPerfil/index.jsx","pages/Global/PerfilUsuario/index.jsx","utils/index.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport {Box, Button, Typography, Modal, TextField, IconButton} from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport \"./style.css\";\r\nimport api from \"../../../api\";\r\n\r\nfunction ModalExperiencias(props) {\r\n\r\n\r\n    const [experiencia, setExperiencia] = useState({id: props.idExp, \r\n                                                        titulo: props.tituloExp, \r\n                                                        descricao: props.descExp, \r\n                                                        idProfessor: sessionStorage.getItem(\"ID\")});\r\n    \r\n   \r\n\r\n    function atualizarExperiencia() {        \r\n\r\n        let url = '';\r\n\r\n        if (experiencia.id === undefined && props.isNovaExp) {\r\n            url = '/experiencias'\r\n\r\n            let dadosExp = { titulo: experiencia.titulo, descricao: experiencia.descricao, idProfessor: sessionStorage.getItem(\"ID\")}\r\n\r\n            api.post(url, dadosExp, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` }})\r\n            .then(res => {\r\n\r\n                alert(\"Experiência Adicionada com sucesso!\")\r\n\r\n                let novaExp = {\r\n                    id: res.data.id,\r\n                    titulo: experiencia.titulo,\r\n                    descricao: experiencia.descricao,\r\n                    idProfessor: experiencia.idProfessor,\r\n                };\r\n\r\n                let expsAtualizadas = props.stateFormDataExps.formData.experiencias;\r\n\r\n                expsAtualizadas.push(novaExp)\r\n                \r\n                props.stateFormDataExps.setFormData({...props.stateFormDataExps.formData, experiencias: expsAtualizadas})\r\n        \r\n                setExperiencia({...experiencia,\r\n                                                titulo: \"\", \r\n                                                descricao: \"\", \r\n                                })\r\n                            })\r\n            .catch(err => {\r\n                alert(\"Ocorreu um erro sao adicionar sua experiência\")\r\n                console.log(err)\r\n            })\r\n        }\r\n        else {\r\n            url = `/experiencias/atualiza-exp/${experiencia.id}`\r\n\r\n            console.log(url)\r\n\r\n            let dadosExp = { titulo: experiencia.titulo, descricao: experiencia.descricao}\r\n\r\n            api.put(url, dadosExp, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` }}).then(res => {\r\n                \r\n                alert(\"Experiência atualizada com sucesso!\")\r\n\r\n                let expsAtualizadas = props.stateFormDataExps.formData.experiencias;\r\n\r\n                expsAtualizadas[props.indexExp] = experiencia;\r\n\r\n                props.stateFormDataExps.setFormData({...props.stateFormDataExps.formData, experiencias: expsAtualizadas})\r\n\r\n            })\r\n            .catch(err => {\r\n                alert(\"Ocorreu um erro sao adicionar sua experiência\")\r\n                console.log(experiencia)\r\n                console.log(err)\r\n            })\r\n        }\r\n\r\n        \r\n        \r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Modal open={props.visibilidade} onClose={props.closeModal}>\r\n                <Box className =\"box-modal\">\r\n                    <Box className= \"box-inputs-modal\">\r\n                        <Box className=\"box-header-modal\">\r\n                            <Typography className=\"txt-header-modal\">Adicionar Experiência </Typography>\r\n                            <IconButton aria-label=\"close\" onClick={props.closeModal} sx={{ color: \"var(--dark-font)\"}} >\r\n                                <CloseIcon sx={{ fontSize: '2rem !important' }} />\r\n                            </IconButton>\r\n                        </Box>\r\n\r\n                        <Box className=\"box-titulo\">\r\n                            <Typography className=\"txt-titulo\">Título </Typography>\r\n                            <TextField  onChange={(e) => setExperiencia({...experiencia, titulo: e.target.value})} label=\"Título\" variant=\"standard\" error={\"\"} helperText={\"\"} value={experiencia.titulo} inputProps={{maxLength: 50}}/>         \r\n                        </Box>\r\n\r\n                        <Box className=\"box-descricao\">\r\n                            <Typography className=\"txt-descricao\"> Descrição</Typography>\r\n                            <TextField  onChange={(e) => setExperiencia({...experiencia, descricao: e.target.value})} label=\"Descrição até 100 caracteres\" variant=\"standard\" error={\"\"} helperText={\"\"} value={experiencia.descricao} inputProps={{maxLength: 100}}/>   \r\n                        </Box>\r\n\r\n                        <Box className=\"box-button-salvar-adicionar-exp\">\r\n                            <Button variant=\"text\" onClick = {atualizarExperiencia} className=\"button-salvar-adicionar-exp\">\r\n                                <Typography variant=\"inherit\">{props.isNovaExp ? 'Adicionar' : 'Salvar'}</Typography>\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Modal>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ModalExperiencias;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport \"./style.css\"\r\nimport EditIcon from \"../../../imgs/edit-24px.png\"\r\nimport DeleteIcon from \"../../../imgs/delete-24px.png\"\r\nimport ModalExperiencias from \"../ModalExperiencias\";\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\nfunction CardExperiencias(props) {\r\n\r\n    const [exp, setExp] = useState({id: props.idExp, titulo: props.titulo, descricao: props.descricao});\r\n\r\n    let [visibilidade, setVisibilidade] = useState(false);\r\n    const abrirModalExperiencias = () => setVisibilidade(true);\r\n    const fecharModalExperiencias = () => setVisibilidade(false);\r\n\r\n    return (\r\n        <>\r\n            <ModalExperiencias  visibilidade={visibilidade}\r\n                                closeModal={fecharModalExperiencias}\r\n                                stateFormDataExps={props.stateFormDataExps} \r\n                                idExp={exp.id} \r\n                                tituloExp={exp.titulo} \r\n                                descExp={exp.descricao} \r\n                                indexExp = {props.index} isNovaExp={false}/>\r\n            <Box className=\"box-experiencias\">\r\n                <Box className=\"box-experiencias-textos\">\r\n                    <Typography className=\"titulo-experiencia\"> {props.titulo} </Typography>\r\n                    <Typography className=\"descricao-experiencia\">  {props.descricao} </Typography>\r\n                </Box>\r\n\r\n                <Box className=\"box-icons-editar-excluir\" display={props.disableIconesEditarExcluir ? 'none' : 'flex'}>\r\n                    <Tooltip title=\"Editar Experiência\" placement=\"bottom-start\" arrow={true}>\r\n                        <img src={EditIcon} alt=\"\"  className=\"img-icons\" onClick={abrirModalExperiencias}/>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Deletar Experiência\" placement=\"bottom-start\" arrow={true}>\r\n                        <img src={DeleteIcon} alt=\"\" className=\"img-icons\" onClick={() => props.deletarExpPorId(props.idExp)}/>\r\n                    </Tooltip>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardExperiencias;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Box, Button, Typography, Modal, IconButton } from '@mui/material';\r\nimport AvatarComFoto from \"../AvatarComFoto\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport \"./style.css\";\r\nimport { storage } from \"../../../utils/firebase\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction ModalUploadFotoPerfil(props) {\r\n\r\n\r\n    const [imgUpdloadFirebase, setimgUpdloadFirebase] = useState(\"\");\r\n\r\n    const [imgUrl, setImgUrl] = useState(\"\");\r\n\r\n    const [imgNaoAlterada, setImgNaoAlterada] = useState(true);\r\n\r\n    const { recarregarImgPerfil, setRecarregarImgPerfil } = props.imgState;\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n\r\n        if (file && file.type.startsWith('image/')) {\r\n            setimgUpdloadFirebase(file);\r\n            setImgUrl(URL.createObjectURL(file));\r\n            setImgNaoAlterada(false);\r\n            setRecarregarImgPerfil(true)\r\n        }\r\n        else {\r\n            alert('Por favor, selecione uma imagem válida.');\r\n        }\r\n    };\r\n\r\n    const atualizarFotoDePerfil = () => {\r\n\r\n        const file = imgUpdloadFirebase;\r\n\r\n        if (!file) {\r\n            alert(\"Selecione uma imagem!\")\r\n            return;\r\n        }\r\n        else if (imgNaoAlterada) {\r\n            alert(\"Selecione uma imagem!\")\r\n            return;\r\n        }\r\n\r\n        // Referência para o local de armazenamento no Firebase\r\n        const storageRef = storage.ref();\r\n\r\n        // Crie um nome de arquivo exclusivo para evitar substituições\r\n        const fileName = `/imgs-perfil-usuario/${sessionStorage.getItem(\"ID\")}_ft_perfil`;\r\n\r\n        // Referência ao arquivo no Firebase Storage\r\n        const fileRef = storageRef.child(fileName);\r\n\r\n        // Faça o upload do arquivo para o Firebase Storage\r\n        fileRef.put(file).then((snapshot) => {\r\n            console.log('Arquivo enviado com sucesso:', snapshot);\r\n\r\n            // Obtenha a URL de download do arquivo enviado\r\n            snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                props.recarregarTodasImgs(true);\r\n            });\r\n            alert(\"Sua foto de perfil foi atualizada com sucesso!\")\r\n\r\n            reiniciarImg();\r\n            props.closeModal()\r\n        }).catch(err => {\r\n            console.log(err)\r\n            alert(\"Ocorreu um erro ao enviar sua imagem. Tente Novamente!\")\r\n        });\r\n    }\r\n\r\n    const reiniciarImg = () => {\r\n        setImgUrl(\"\");\r\n        setRecarregarImgPerfil(false);\r\n        setImgNaoAlterada(true);\r\n    };\r\n\r\n    const onClose = () => {\r\n        reiniciarImg();\r\n        props.closeModal();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setImgUrl(props.imgUrl);\r\n    }, [props.imgUrl])\r\n\r\n    return (\r\n        <>\r\n            <Modal open={props.visibilidade} onClose={onClose} >\r\n                <Box className=\"box-modal-upload-foto-perfil\">\r\n\r\n                    <Box className=\"box-header-modal-upload-foto-perfil\">\r\n                        <Typography className=\"txt-header-modal-upload-foto-perfil\">Editar Foto de Perfil </Typography>\r\n                        <IconButton aria-label=\"close\" onClick={onClose} sx={{ color: \"var(--dark-font)\" }} >\r\n                            <CloseIcon sx={{ fontSize: '2rem !important' }} />\r\n                        </IconButton>\r\n                    </Box>\r\n\r\n                    <Box className={\"box-upload-img\"}>\r\n                        <AvatarComFoto\r\n                            className=\"img-perfil-usuario\"\r\n                            id={props.idUsuario}\r\n                            nome={props.nomeUsuario}\r\n                            recarregarImg={recarregarImgPerfil}\r\n                            imgUrl={imgUrl}\r\n                            naoCarregar />\r\n                        <input type=\"file\" className=\"ipt-select-img\"\r\n                            onChange={handleFileChange} />\r\n                    </Box>\r\n\r\n\r\n                    <Button variant=\"text\" onClick={atualizarFotoDePerfil} className=\"button-enviar-img\">\r\n                        <Typography variant=\"inherit\">Enviar</Typography>\r\n                    </Button>\r\n\r\n                </Box>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalUploadFotoPerfil;","import {\r\n    Box,\r\n    Typography,\r\n    Rating\r\n} from \"@mui/material\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport AvatarComFoto from \"../../AvatarComFoto/index.jsx\";\r\nimport ModalUploadFotoPerfil from \"../../ModalUploadFotoPerfil/index.jsx\";\r\nimport \"./style.css\";\r\n\r\nfunction FotoPerfil(props) {\r\n    // Informações Modal\r\n    const { abrirModalUploadFotoPerfil, visibilidadeModalFotoPerfil, fecharModalFecharModalUploadFotoPerfil} = props.funcoesModal;\r\n\r\n    // Informações Usuário\r\n    const { idUsuario, formData } = props.infoUsuario;\r\n    const nomeUsuario = formData.nome;\r\n    const notaAvaliacao = formData.avaliacaoMedia;\r\n\r\n    // Informações Imagem\r\n    const { recarregarImgPerfil, setRecarregarImgPerfil } = props.imgPerfilState;\r\n    const recarregarTodasImgs = props.recarregarTodasImgs;\r\n\r\n    const avatarImgUrlRef = useRef();\r\n    let avatarImgUrl;\r\n    useEffect(() => {\r\n        if (avatarImgUrlRef.current) {\r\n            avatarImgUrl = avatarImgUrlRef.current.getImgPerfilURL();\r\n        }\r\n    }, [avatarImgUrlRef.current]);\r\n\r\n    return (\r\n        <Box className=\"box-foto-perfil\">\r\n            <AvatarComFoto\r\n                id={idUsuario}\r\n                onClick={abrirModalUploadFotoPerfil}\r\n                className=\"img-perfil\"\r\n                nome={nomeUsuario}\r\n                recarregarImg={recarregarImgPerfil}\r\n                ref={avatarImgUrlRef}\r\n            />\r\n            <ModalUploadFotoPerfil idUsuario={idUsuario} imgUrl={avatarImgUrl} visibilidade={visibilidadeModalFotoPerfil} closeModal={fecharModalFecharModalUploadFotoPerfil} imgState={{ recarregarImgPerfil, setRecarregarImgPerfil }} recarregarTodasImgs={recarregarTodasImgs} nomeUsuario={nomeUsuario} />\r\n            <Box className=\"container-avaliacao\">\r\n                <Typography>{formData.avaliacaoMedia.toFixed(2)}</Typography>\r\n                <Rating name=\"half-rating-read\" defaultValue={0} precision={0.5} readOnly size=\"medium\" value={notaAvaliacao} />\r\n            </Box>\r\n            <Typography className=\"txt-nome\">{nomeUsuario}</Typography>\r\n            {/* <Typography className=\"txt-idade\">{formData.idade} Anos</Typography> */}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default FotoPerfil;","import EstruturaPaginaUsuario from \"../../../components/Global/EstruturaPaginaUsuario/Main\";\r\nimport { Box, Typography, TextField, InputLabel, MenuItem, FormControl, Select, Tooltip} from \"@mui/material\";\r\nimport \"./style.css\";\r\nimport EditIcon from \"../../../imgs/edit-24px.png\"\r\nimport SaveIcon from \"../../../imgs/checked-24px.png\"\r\nimport AdicionarIcon from \"../../../imgs/botao-adicionar-24px.png\"\r\nimport { useState, useEffect } from \"react\";\r\nimport InputMask from 'react-input-mask';\r\nimport api from \"../../../api.js\";\r\nimport CardExperiencias from \"../../../components/Professor/CardExperiencias\";\r\nimport { consultaCep } from \"../../../utils\";\r\nimport Textarea from '@mui/joy/Textarea';\r\nimport FormHelperText from '@mui/joy/FormHelperText';\r\nimport ModalExperiencias from \"../../../components/Professor/ModalExperiencias\";\r\nimport FotoPerfil from \"../../../components/Global/PerfilUsuario/FotoPerfil/index.jsx\";\r\n\r\nimport { verificarToken } from \"../../../utils/index.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nfunction PerfilUsuario() {\r\n\r\n  // Este indicador serve para que ao renderizar a página ele não modifique os dados de CEP logo de inicio e sim só altere os dados de endereço\r\n  // quando o usuário digitar o último número do CEP\r\n  let [ativarBuscaCep, setAtivarBuscaCep] = useState(false);\r\n  const [dadosPerfilAntesDeEditar, setDadosPerfilAntesDeEditar] = useState({\r\n    nome: \"\",\r\n    email: \"\",\r\n    dataNasc: \"\",\r\n    sexo: \"\",\r\n    bibliografia: \"\",\r\n    cep: \"\",\r\n    numero: \"\",\r\n    complemento: \"\",\r\n    experiencias: [],\r\n  })\r\n\r\n  // Desativa o formData\r\n  const [formDataDisable, setFormDataDisable] = useState({\r\n    dadosPessoais: true,\r\n    dadosEndereco: true,\r\n    dadosSobreMim: true,\r\n    dadosExperiencias: true\r\n  })\r\n\r\n  // Valor adicionados pelo usuário\r\n  const idUsuario = sessionStorage.getItem(\"ID\");\r\n  const [formData, setFormData] = useState({\r\n    nome: '',\r\n    avaliacaoMedia: 0.0,\r\n    email: '',\r\n    cpf: '',\r\n    sexo: '',\r\n    dataNasc: '',\r\n    dataNascFormatada: '',\r\n    idade: '',\r\n    bibliografia: '',\r\n    cep: '',\r\n    logradouro: '',\r\n    numero: '',\r\n    complemento: '',\r\n    bairro: '',\r\n    cidade: '',\r\n    estado: '',\r\n    experiencias: [],\r\n  });\r\n\r\n  // Erros de validação\r\n  const [errorsDadosPessoais, setErrorsDadosPessoais] = useState({\r\n    errorNome: false,\r\n    helperTextNome: \"\",\r\n\r\n    errorEmail: false,\r\n    helperTextEmail: \"\",\r\n\r\n    errorDataNasc: false,\r\n    helperTextDataNasc: \"\"\r\n  })\r\n\r\n  // Erros de validação\r\n  const [errorsSobreMim, setErrorsSobreMim] = useState({\r\n    errorSobreMim: false,\r\n    helperTextSobreMim: \"\",\r\n  })\r\n\r\n  // Erros de validação\r\n  const [errorsDadosEndereco, setErrorsDadosEndereco] = useState({\r\n\r\n    errorCep: false,\r\n    helperTextCep: \"\",\r\n\r\n    errorNumero: false,\r\n    helperTextNumero: \"\",\r\n\r\n  })\r\n\r\n\r\n  // Modal de Experiências\r\n  let [visibilidade, setVisibilidade] = useState(false);\r\n  const abrirModalExperiencias = () => setVisibilidade(true);\r\n  const fecharModalExperiencias = () => setVisibilidade(false);;\r\n\r\n  // Modal de Upload de Foto de Perfil\r\n  let [visibilidadeModalFotoPerfil, setVisibilidadeModalFotoPerfil] = useState(false);\r\n  const abrirModalUploadFotoPerfil = () => setVisibilidadeModalFotoPerfil(true);\r\n  const fecharModalFecharModalUploadFotoPerfil = () => setVisibilidadeModalFotoPerfil(false);\r\n  \r\n  // Fotos da página\r\n  const [recarregarImgPerfil, setRecarregarImgPerfil] = useState(false);\r\n  const [recarregarImgPagina, setRecarregarImgPagina] = useState(false);\r\n\r\n  // Navegação\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (verificarToken()) navigate(\"/login\");\r\n\r\n    obterDadosPerfil();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (formData.cep !== undefined && !formData.cep.includes('_') && formData.cep !== '' && formData.cep.length === 9) {\r\n      if (ativarBuscaCep) {\r\n        verificarCep()\r\n      }\r\n    }\r\n  }, [formData.cep])\r\n\r\n  function obterDadosPerfil() {\r\n    // Obtendo os dados de perfil  \r\n    api.get(`/usuarios/dados-perfil/${idUsuario}`, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` } })\r\n      .then(response => {\r\n\r\n        let dadosUsuario = response.data;\r\n\r\n        // Dados pessoais do usuário\r\n        setFormData({\r\n          ...formData,\r\n          nome: dadosUsuario.nome,\r\n          email: dadosUsuario.email,\r\n          avaliacaoMedia: dadosUsuario.avaliacaoMedia,\r\n          cpf: dadosUsuario.cpf,\r\n          sexo: dadosUsuario.sexo,\r\n          dataNasc: dadosUsuario.dataNasc,\r\n          dataNascFormatada: new Date(dadosUsuario.dataNasc).toLocaleString(\"pt-BR\", { year: \"numeric\", month: \"2-digit\", day: \"2-digit\", }),\r\n          idade: calcularIdade(dadosUsuario.dataNasc),\r\n          bibliografia: dadosUsuario.bibliografia,\r\n          cep: dadosUsuario.endereco.cep,\r\n          logradouro: dadosUsuario.endereco.logradouro,\r\n          numero: dadosUsuario.endereco.numero,\r\n          complemento: dadosUsuario.endereco.complemento,\r\n          bairro: dadosUsuario.endereco.bairro,\r\n          cidade: dadosUsuario.endereco.cidade,\r\n          estado: dadosUsuario.endereco.estado,\r\n          experiencias: dadosUsuario.experiencia,\r\n        })\r\n\r\n        setDadosPerfilAntesDeEditar({\r\n          nome: dadosUsuario.nome,\r\n          email: dadosUsuario.email,\r\n          dataNasc: dadosUsuario.dataNasc,\r\n          sexo: dadosUsuario.sexo,\r\n          bibliografia: dadosUsuario.bibliografia,\r\n          cep: dadosUsuario.endereco.cep,\r\n          numero: dadosUsuario.endereco.numero,\r\n          complemento: dadosUsuario.endereco.complemento,\r\n          experiencias: dadosUsuario.experiencia,\r\n        })\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n\r\n  }\r\n\r\n  function formatDateToLocalDateSpring(date) {\r\n    const parts = date.split('/');\r\n\r\n    let dataFormata = parts[2] + \"-\" + parts[1] + \"-\" + parts[0]\r\n\r\n    return dataFormata;\r\n\r\n  }\r\n\r\n  function verificarNome(nome) {\r\n    if (nome.length < 4) {\r\n      setErrorsDadosPessoais({ ...errorsDadosPessoais, errorNome: true, helperTextNome: \"O Nome deve conter no mínimo 4 caracteres\" })\r\n    }\r\n    else {\r\n      setErrorsDadosPessoais({ ...errorsDadosPessoais, errorNome: false, helperTextNome: \"\" })\r\n    }\r\n  }\r\n\r\n  function verificarEmail(email) {\r\n    if (email.length < 4) {\r\n      setErrorsDadosPessoais({ ...errorsDadosPessoais, errorEmail: true, helperTextEmail: \"O Email deve conter no mínimo 4 caracteres\" })\r\n    } else if (!email.includes('@') || !email.includes('.')) {\r\n      setErrorsDadosPessoais({ ...errorsDadosPessoais, errorEmail: true, helperTextEmail: \"Email Inválido\" })\r\n    }\r\n    else {\r\n      setErrorsDadosPessoais({ ...errorsDadosPessoais, errorEmail: false, helperTextEmail: \"\" })\r\n    }\r\n  }\r\n\r\n  function validaDataNascimento(dataNascimento) {\r\n\r\n    dataNascimento = dataNascimento.split('/');\r\n    let dia = dataNascimento[0];\r\n    let mes = dataNascimento[1];\r\n    let ano = dataNascimento[2];\r\n\r\n    if (dia < 1 || dia > 31) { setErrorsDadosPessoais({ ...errorsDadosPessoais, errorDataNasc: true, helperTextDataNasc: \"Dia inválido\" }); return; }\r\n    else if (mes < 1 || mes > 12) { setErrorsDadosPessoais({ ...errorsDadosPessoais, errorDataNasc: true, helperTextDataNasc: \"Mês inválido\" }); return; }\r\n    else if (ano < 1900 || ano > new Date().getFullYear()) { setErrorsDadosPessoais({ ...errorsDadosPessoais, errorDataNasc: true, helperTextDataNasc: \"Ano inválido\" }); return; }\r\n\r\n    let data = new Date(ano, mes - 1, dia), dataAtual = new Date();\r\n\r\n    if (data > dataAtual) {\r\n      setErrorsDadosPessoais({ ...errorsDadosPessoais, errorDataNasc: true, helperTextDataNasc: \"Data de Nascimento inválida\" })\r\n    }\r\n    else {\r\n      setErrorsDadosPessoais({ ...errorsDadosPessoais, errorDataNasc: false, helperTextDataNasc: \"\" })\r\n    }\r\n  }\r\n\r\n  function validarSobreMim(bibliografia) {\r\n    if (bibliografia === '' || bibliografia === undefined || bibliografia === ' ' || bibliografia.length < 20) {\r\n      setErrorsSobreMim({ ...errorsSobreMim, errorSobreMim: true, helperTextSobreMim: \"Texto Inválido. Este campo deve conter no mínimo 20 caracteres\" })\r\n    }\r\n    else if (bibliografia.length === 500) {\r\n      setErrorsSobreMim({ ...errorsSobreMim, errorSobreMim: true, helperTextSobreMim: \"Você atingiu o máximo de caracteres\" })\r\n    }\r\n    else {\r\n      setErrorsSobreMim({ ...errorsSobreMim, errorSobreMim: false, helperTextSobreMim: \"\" })\r\n    }\r\n  }\r\n\r\n  async function verificarCep() {\r\n\r\n    let dadosViaCep = await consultaCep(formData.cep)\r\n\r\n\r\n    if (dadosViaCep === null) {\r\n      setErrorsDadosEndereco({ ...errorsDadosEndereco, errorCep: true, helperTextCep: \"CEP Inválido\" })\r\n    }\r\n    else {\r\n      setFormData({\r\n        ...formData,\r\n        logradouro: dadosViaCep.logradouro,\r\n        numero: \"\",\r\n        complemento: \"\",\r\n        bairro: dadosViaCep.bairro,\r\n        cidade: dadosViaCep.localidade,\r\n        estado: dadosViaCep.uf,\r\n      })\r\n      setErrorsDadosEndereco({ ...errorsDadosEndereco, errorCep: false, helperTextCep: \"\" })\r\n    }\r\n  }\r\n\r\n  function verificarNumeroEndereco(num) {\r\n\r\n    if (num > 99999 || num <= 0 || num === \"\" || num === null || num === undefined) {\r\n      setErrorsDadosEndereco({ errorsDadosEndereco, errorNumero: true, helperTextNumero: \"Número Inválido\" })\r\n    }\r\n    else {\r\n      setErrorsDadosEndereco({ errorsDadosEndereco, errorNumero: false, helperTextNumero: \"\" })\r\n    }\r\n  }\r\n\r\n  function atualizarDadosPessoais() {\r\n\r\n    let desabilitarEdicao;\r\n\r\n    let camposNaoForamEditados = (dadosPerfilAntesDeEditar.nome === formData.nome && dadosPerfilAntesDeEditar.email === formData.email && dadosPerfilAntesDeEditar.dataNasc === formData.dataNasc && dadosPerfilAntesDeEditar.sexo === formData.sexo)\r\n\r\n    if (camposNaoForamEditados) {\r\n      alert(\"Você não editou nenhum dos campos !\")\r\n\r\n      desabilitarEdicao = true;\r\n\r\n      return desabilitarEdicao\r\n    }\r\n    else if (errorsDadosPessoais.errorNome === false && errorsDadosPessoais.errorEmail === false && errorsDadosPessoais.errorDataNasc === false) {\r\n\r\n      let dadosUsuario = {\r\n        nome: formData.nome,\r\n        email: formData.email,\r\n        dataNasc: formatDateToLocalDateSpring(formData.dataNascFormatada),\r\n        sexo: formData.sexo\r\n      }\r\n\r\n      api.put(`/usuarios/atualiza-dados-pessoais/${idUsuario}`, dadosUsuario, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` } })\r\n        .then(res => {\r\n          alert(\"Seus Dados foram atualizados com sucesso!\")\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n      desabilitarEdicao = true\r\n      return desabilitarEdicao;\r\n    }\r\n    else {\r\n      alert(\"Campos Inválidos! Não foi possível atualizar seus dados!\")\r\n\r\n      desabilitarEdicao = false\r\n\r\n      return desabilitarEdicao;\r\n    }\r\n\r\n  }\r\n\r\n  function atualizasrSobreMim() {\r\n    let desabilitarEdicao;\r\n\r\n    let camposNaoForamEditados = (dadosPerfilAntesDeEditar.bibliografia === formData.bibliografia)\r\n\r\n    if (camposNaoForamEditados) {\r\n      alert(\"Você não editou nenhum dos campos !\")\r\n\r\n      desabilitarEdicao = true;\r\n\r\n      return desabilitarEdicao\r\n    }\r\n    else if (!errorsSobreMim.errorSobreMim) {\r\n\r\n      let usuarioBibliografia = {\r\n        bibliografia: formData.bibliografia\r\n      }\r\n\r\n      api.put(`/usuarios/atualiza-sobre-mim/${idUsuario}`, usuarioBibliografia, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` } })\r\n        .then(res => {\r\n          alert(\"Seus Dados foram atualizados com sucesso!\")\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n\r\n      desabilitarEdicao = true\r\n\r\n      return desabilitarEdicao;\r\n    }\r\n    else {\r\n      alert(\"Campos Inválidos! Não foi possível atualizar seus dados!\")\r\n\r\n      desabilitarEdicao = false\r\n\r\n      return desabilitarEdicao;\r\n    }\r\n  }\r\n\r\n  function atualizarDadosEndereco() {\r\n\r\n    let desabilitarEdicao;\r\n\r\n    let camposNaoForamEditados = (dadosPerfilAntesDeEditar.cep === formData.cep && dadosPerfilAntesDeEditar.numero === formData.numero && dadosPerfilAntesDeEditar.complemento === formData.complemento)\r\n\r\n    if (camposNaoForamEditados) {\r\n      alert(\"Você não editou nenhum dos campos de endereço !\")\r\n\r\n      desabilitarEdicao = true;\r\n\r\n      return desabilitarEdicao\r\n    }\r\n    else if (formData.numero > 99999 || formData.numero <= 0 || formData.numero === \"\" || formData.numero === null || formData.numero === undefined) {\r\n      setErrorsDadosEndereco({ errorsDadosEndereco, errorNumero: true, helperTextNumero: \"Número Inválido\" })\r\n\r\n      alert(\"Campos Inválidos! Não foi possível atualizar seus dados!\")\r\n\r\n      desabilitarEdicao = false\r\n\r\n      return desabilitarEdicao;\r\n    }\r\n    else if (!errorsDadosEndereco.errorCep && !errorsDadosEndereco.errorNumero) {\r\n\r\n      let dadosEndereco = {\r\n        cep: formData.cep,\r\n        logradouro: formData.logradouro,\r\n        numero: formData.numero,\r\n        complemento: formData.complemento,\r\n        bairro: formData.bairro,\r\n        cidade: formData.cidade,\r\n        estado: formData.estado\r\n      }\r\n\r\n      api.put(`/enderecos/atualiza-endereco-usuario/${idUsuario}`, dadosEndereco, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` } })\r\n        .then(res => {\r\n          alert(\"Seus Dados foram atualizados com sucesso!\")\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n\r\n      desabilitarEdicao = true\r\n\r\n      return desabilitarEdicao;\r\n    }\r\n    else {\r\n      alert(\"Campos Inválidos! Não foi possível atualizar seus dados!\")\r\n\r\n      desabilitarEdicao = false\r\n\r\n      return desabilitarEdicao;\r\n    }\r\n  }\r\n\r\n  function calcularIdade(dataNasc) {\r\n    dataNasc = new Date(dataNasc);\r\n    const dataAtual = new Date();\r\n\r\n    let idade = dataAtual.getFullYear() - dataNasc.getFullYear();\r\n    const mesAtual = dataAtual.getMonth();\r\n    const diaAtual = dataAtual.getDate();\r\n    const mesNascimento = dataNasc.getMonth();\r\n    const diaNascimento = dataNasc.getDate();\r\n\r\n    // Verifica se ainda não fez aniversário no ano corrente\r\n    if (mesAtual < mesNascimento || (mesAtual === mesNascimento && diaAtual < diaNascimento)) {\r\n      idade--;\r\n    }\r\n\r\n    return idade;\r\n  }\r\n\r\n  function deletarExpPorId(id) {\r\n\r\n    let url = `/experiencias/${id}`\r\n\r\n    console.log(url)\r\n\r\n    api.delete(url, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` } }).then(res => {\r\n      alert(\"Experiência excluída com sucesso!\")\r\n      obterDadosPerfil()\r\n    })\r\n      .catch(err => {\r\n        alert(\"Ocorreu um erro sao adicionar sua experiência\")\r\n        console.log(err)\r\n      })\r\n\r\n  }\r\n\r\n  const recarregarTodasImgs = () => {\r\n    setRecarregarImgPerfil(true);\r\n    setRecarregarImgPagina(true);\r\n  }\r\n  \r\n  return (\r\n    <EstruturaPaginaUsuario recarregarTodasImgs={recarregarImgPagina}>\r\n      <Box className=\"pagina-container\">\r\n\r\n        <Box className=\"container-dados-pessoais\">\r\n          <FotoPerfil\r\n            infoUsuario={{ idUsuario, formData }}\r\n            funcoesModal={{ abrirModalUploadFotoPerfil, visibilidadeModalFotoPerfil, fecharModalFecharModalUploadFotoPerfil }}\r\n            imgPerfilState={{ recarregarImgPerfil, setRecarregarImgPerfil}}\r\n            recarregarImgPagina={{ recarregarImgPagina, setRecarregarImgPagina}}\r\n            recarregarTodasImgs={recarregarTodasImgs} />\r\n\r\n          <Box className=\"box-dados-pessoais\">\r\n\r\n            <Box className=\"box-titulo-e-edit-icon\">\r\n              <Typography className=\"txt-titulo\">Dados Pessoais</Typography>\r\n              <Tooltip title={formDataDisable.dadosPessoais ? \"Editar Dados Pessoais\" : \"Salvar Alterações\"} placement=\"bottom-start\" arrow={true}>\r\n                <img src={formDataDisable.dadosPessoais ? EditIcon : SaveIcon} alt=\"\" className=\"img-edit-icon\"\r\n                  onClick={() => {\r\n                    if (formDataDisable.dadosPessoais === false) {\r\n                      setFormDataDisable({ ...formDataDisable, dadosPessoais: atualizarDadosPessoais() })\r\n                    }\r\n                    else {\r\n                      setFormDataDisable({ ...formDataDisable, dadosPessoais: false })\r\n                    }\r\n                  }\r\n                  }\r\n                />\r\n              </Tooltip>\r\n            </Box>\r\n\r\n            <Box className=\"box-inputs-dados-pessoais-pt1\">\r\n              <TextField id=\"ipt-nome\" onChange={(e) => { setFormData({ ...formData, nome: e.target.value }); verificarNome(e.target.value) }} label=\"Nome\" variant=\"standard\" error={errorsDadosPessoais.errorNome} helperText={errorsDadosPessoais.helperTextNome} value={formData.nome} sx={{ width: \"40%\" }} disabled={formDataDisable.dadosPessoais} />\r\n              <InputMask mask='99/99/9999' onChange={(e) => { setFormData({ ...formData, dataNascFormatada: e.target.value }); validaDataNascimento(e.target.value) }} sx={{ width: \"100%\" }} value={formData.dataNascFormatada} disabled={formDataDisable.dadosPessoais}>\r\n                {() => (\r\n                  <TextField id=\"ipt-dataNascimento\" label=\"Data de Nascimento\" error={errorsDadosPessoais.errorDataNasc} helperText={errorsDadosPessoais.helperTextDataNasc} variant=\"standard\" disabled={formDataDisable.dadosPessoais} />\r\n                )}\r\n              </InputMask>\r\n\r\n              <TextField id=\"ipt-cpf\" label=\"CPF\" variant=\"standard\" sx={{ width: \"30%\" }} value={formData.cpf} disabled />\r\n\r\n            </Box>\r\n\r\n            <Box className=\"box-inputs-dados-pessoais-pt2\" >\r\n              <TextField id=\"ipt-email\" onChange={(e) => { setFormData({ ...formData, email: e.target.value }); verificarEmail(e.target.value) }} label=\"Email\" variant=\"standard\" error={errorsDadosPessoais.errorEmail} helperText={errorsDadosPessoais.helperTextEmail} value={formData.email} sx={{ width: \"64%\" }} disabled={formDataDisable.dadosPessoais} />\r\n              <FormControl variant=\"standard\" sx={{ minWidth: 120, width: \"30%\" }} disabled={formDataDisable.dadosPessoais}>\r\n                <InputLabel id=\"demo-simple-select-standard-label\">Sexo</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-standard-label\"\r\n                  id=\"demo-simple-select-standard\"\r\n                  value={formData.sexo}\r\n                  onChange={(e) => setFormData({ ...formData, sexo: e.target.value })}\r\n                  label=\"Sexo\"\r\n                >\r\n                  <MenuItem value={\"Masculino\"}>Masculino</MenuItem>\r\n                  <MenuItem value={\"Feminino\"}>Feminino</MenuItem>\r\n                  <MenuItem value={\"Outros\"}>Outros</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box className=\"container-sobre-mim-e-endereco\">\r\n\r\n          <Box className=\"box-sobre-mim\">\r\n            <Box className=\"box-titulo-e-edit-icon\">\r\n              <Typography className=\"txt-titulo\">Sobre Mim</Typography>\r\n              <Tooltip title={formDataDisable.dadosSobreMim ? \"Editar Sobre Mim\" : \"Salvar Alterações\"} placement=\"bottom-start\" arrow={true}>\r\n                <img src={formDataDisable.dadosSobreMim ? EditIcon : SaveIcon} alt=\"\" className=\"img-edit-icon\"\r\n                  onClick={() => {\r\n                    if (formDataDisable.dadosSobreMim === false) {\r\n                      setFormDataDisable({ ...formDataDisable, dadosSobreMim: atualizasrSobreMim() })\r\n                    }\r\n                    else {\r\n                      setFormDataDisable({ ...formDataDisable, dadosSobreMim: false })\r\n                    }\r\n                  }\r\n                  }\r\n                />\r\n              </Tooltip>\r\n            </Box>\r\n            {\r\n              formDataDisable.dadosSobreMim ?\r\n                <Typography className=\"txt-sobre-mim\">\r\n                  {formData.bibliografia === '' ?\r\n                    'Seja-bem vindo. Clique no icone de editar no canto superior direito e escreva sobre você! :)' :\r\n                    formData.bibliografia\r\n                  }\r\n                </Typography>\r\n                :\r\n                <>\r\n                  <Textarea name=\"Outlined\"\r\n                    placeholder=\"Escreva sobre você\"\r\n                    variant=\"outlined\"\r\n                    className=\"txt-area-sobre-mim\"\r\n                    error={errorsSobreMim.errorSobreMim}\r\n                    helperText={errorsSobreMim.helperTextSobreMim}\r\n                    value={formData.bibliografia}\r\n                    inputProps={{ maxLength: 500 }}\r\n                    onChange={(e) => { setFormData({ ...formData, bibliografia: e.target.value }); validarSobreMim(e.target.value) }}\r\n                    endDecorator={\r\n                      <Typography level=\"body-xs\" sx={{ ml: 'auto', color: '#000' }}>\r\n                        {formData.bibliografia.length} character(s)\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                  <FormHelperText>{errorsSobreMim.helperTextSobreMim}</FormHelperText>\r\n                </>\r\n\r\n            }\r\n          </Box>\r\n\r\n          <Box className=\"linha-divisao-pagina\" />\r\n\r\n          {\r\n            sessionStorage.getItem(\"CATEGORIA\").toLowerCase() === 'professor' ?\r\n              <>\r\n                <Box className=\"box-cards-experiencias\">\r\n                  <Box className=\"box-titulo-e-edit-icon\">\r\n                    <Typography className=\"txt-titulo\">Experiências</Typography>\r\n                    <Box className=\"box-icones-editar-experiencias\" style={{ justifyContent: formDataDisable.dadosExperiencias ? 'end' : 'space-between' }}>\r\n                      <Tooltip title=\"Adicionar Experiência\" placement=\"bottom-start\" arrow={true}>\r\n                        <img src={AdicionarIcon} alt=\"\" onClick={abrirModalExperiencias} className=\"img-edit-icon\"\r\n                        style={{ display: formDataDisable.dadosExperiencias ? 'none' : 'flex' }} />\r\n                      </Tooltip>\r\n                      <Tooltip title={formDataDisable.dadosExperiencias ? \"Editar Experiências\" : \"Salvar Alterações\"} placement=\"bottom-start\" arrow={true}>\r\n                        <img src={formDataDisable.dadosExperiencias ? EditIcon : SaveIcon} alt=\"\" className=\"img-edit-icon\"\r\n                          onClick={() => {\r\n                            if (formDataDisable.dadosExperiencias === false) {\r\n                              setFormDataDisable({ ...formDataDisable, dadosExperiencias: true })\r\n                            }\r\n                            else {\r\n                              setFormDataDisable({ ...formDataDisable, dadosExperiencias: false })\r\n                            }\r\n                          }\r\n                          }\r\n                        />\r\n                      </Tooltip>\r\n                    </Box>\r\n                  </Box>\r\n                  {\r\n                    formData.experiencias.map((exp, i) =>\r\n                      <CardExperiencias index={i} idExp={exp.id} titulo={exp.titulo} descricao={exp.descricao} disableIconesEditarExcluir={formDataDisable.dadosExperiencias} deletarExpPorId={deletarExpPorId} stateFormDataExps={{ formData, setFormData }} />\r\n                    )\r\n                  }\r\n                  <ModalExperiencias visibilidade={visibilidade} closeModal={fecharModalExperiencias} isNovaExp={true} stateFormDataExps={{ formData, setFormData }} />\r\n                </Box>\r\n                <Box className=\"linha-divisao-pagina\" />\r\n              </> : null\r\n          }\r\n\r\n          <Box className=\"box-endereco\">\r\n\r\n            <Box className=\"box-titulo-e-edit-icon\">\r\n              <Typography className=\"txt-titulo\">Endereço</Typography>\r\n              <Tooltip title={formDataDisable.dadosEndereco ? \"Editar Dados de Endereço\" : \"Salvar Alterações\"} placement=\"bottom-start\" arrow={true}>\r\n                <img src={formDataDisable.dadosEndereco ? EditIcon : SaveIcon} alt=\"\" className=\"img-edit-icon\"\r\n                  onClick={() => {\r\n                    if (!formDataDisable.dadosEndereco) {\r\n                      setFormDataDisable({ ...formDataDisable, dadosEndereco: atualizarDadosEndereco() })\r\n                    }\r\n                    else {\r\n                      console.log(formDataDisable)\r\n                      setFormDataDisable({ ...formDataDisable, dadosEndereco: false })\r\n                    }\r\n                  }\r\n                  }\r\n                />\r\n              </Tooltip>\r\n            </Box>\r\n\r\n\r\n            <Box className=\"box-inputs-endereco-pt1\">\r\n              <InputMask mask='99999-999' value={formData.cep}\r\n                onChange={(e) => { setFormData({ ...formData, cep: e.target.value }); setAtivarBuscaCep(true) }} sx={{ width: '25%' }} disabled={formDataDisable.dadosEndereco}>\r\n                {() => (\r\n                  <TextField id=\"ipt-cep\" label=\"CEP\" error={errorsDadosEndereco.errorCep} helperText={errorsDadosEndereco.helperTextCep} variant=\"standard\" disabled={formDataDisable.dadosEndereco} />\r\n                )}\r\n              </InputMask>\r\n            </Box>\r\n\r\n            <Box className=\"box-inputs-endereco-pt1\">\r\n              <TextField id=\"ipt-endereco\" onChange={\"\"} label=\"Endereço\" variant=\"standard\" error={\"\"} helperText={\"\"} value={formData.logradouro} sx={{ width: \"60%\" }} disabled />\r\n              <TextField id=\"ipt-numero\" onChange={(e) => { setFormData({ ...formData, numero: e.target.value }); verificarNumeroEndereco(e.target.value) }} label=\"Número\" variant=\"standard\" error={errorsDadosEndereco.errorNumero} helperText={errorsDadosEndereco.helperTextNumero} value={formData.numero} sx={{ width: \"10%\" }} disabled={formDataDisable.dadosEndereco} type=\"number\" />\r\n              <TextField id=\"ipt-complemento\" onChange={(e) => { setFormData({ ...formData, complemento: e.target.value }) }} label=\"Complemento\" variant=\"standard\" error={\"\"} helperText={\"\"} value={formData.complemento} sx={{ width: \"20%\" }} disabled={formDataDisable.dadosEndereco} inputProps={{ maxLength: 50 }} />\r\n            </Box>\r\n\r\n            <Box className=\"box-inputs-endereco-pt1\">\r\n              <TextField id=\"ipt-bairro\" onChange={\"\"} label=\"Bairro\" variant=\"standard\" error={\"\"} helperText={\"\"} value={formData.bairro} sx={{ width: \"40%\" }} disabled />\r\n              <TextField id=\"ipt-cidade\" onChange={\"\"} label=\"Cidade\" variant=\"standard\" error={\"\"} helperText={\"\"} value={formData.cidade} sx={{ width: \"40%\" }} disabled />\r\n              <TextField id=\"ipt-estado\" onChange={\"\"} label=\"Estado\" variant=\"standard\" error={\"\"} helperText={\"\"} value={formData.estado} sx={{ width: \"10%\" }} disabled />\r\n            </Box>\r\n\r\n          </Box>\r\n\r\n\r\n        </Box>\r\n\r\n\r\n      </Box>\r\n    </EstruturaPaginaUsuario>\r\n  );\r\n}\r\n\r\nexport default PerfilUsuario;\r\n","import axios from 'axios';\r\n\r\nfunction verificarToken() {\r\n    let token = sessionStorage.TOKEN;\r\n\r\n    if (token === null || token === \"\" || token.length < 186) {\r\n        sessionStorage.TOKEN = \"\";\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction validaDataNascimento(dataNascimento) {\r\n    dataNascimento = dataNascimento.split('/');\r\n    let dia = dataNascimento[0];\r\n    let mes = dataNascimento[1];\r\n    let ano = dataNascimento[2];\r\n\r\n    if (dia < 1 || dia > 31) return { error: true, helperText: 'Dia inválido' };\r\n    else if (mes < 1 || mes > 12) return { error: true, helperText: 'Mês inválido' };\r\n    else if (ano < 1900 || ano > new Date().getFullYear()) return { error: true, helperText: 'Ano inválido' };\r\n\r\n    let data = new Date(ano, mes - 1, dia), dataAtual = new Date();\r\n\r\n    if (data > dataAtual) {\r\n        return {\r\n            error: true,\r\n            helperText: 'Data de Nascimento inválida'\r\n        }\r\n    }\r\n\r\n    return {\r\n        error: false,\r\n    };\r\n}\r\n\r\nasync function consultaCep(cep) {\r\n    let dadosViaCep = {}\r\n\r\n    await axios.get(`https://viacep.com.br/ws/${cep}/json/`)\r\n        .then((res) => {\r\n\r\n            if (res.data.erro) dadosViaCep = null;\r\n            else dadosViaCep = res.data;\r\n\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n\r\n    console.log(\"Resposta:\")\r\n    console.log(dadosViaCep)\r\n    return dadosViaCep;\r\n}\r\n\r\nexport {\r\n    verificarToken,\r\n    validaDataNascimento,\r\n    consultaCep\r\n};"],"names":["props","_useState","useState","id","idExp","titulo","tituloExp","descricao","descExp","idProfessor","sessionStorage","getItem","_useState2","_slicedToArray","experiencia","setExperiencia","_jsx","_Fragment","children","Modal","open","visibilidade","onClose","closeModal","Box","className","_jsxs","Typography","IconButton","onClick","sx","color","CloseIcon","fontSize","TextField","onChange","e","_objectSpread","target","value","label","variant","error","helperText","inputProps","maxLength","Button","url","undefined","isNovaExp","dadosExp","api","headers","Authorization","concat","TOKEN","then","res","alert","novaExp","data","expsAtualizadas","stateFormDataExps","formData","experiencias","push","setFormData","catch","err","console","log","indexExp","exp","_useState3","_useState4","setVisibilidade","ModalExperiencias","index","display","disableIconesEditarExcluir","Tooltip","title","placement","arrow","src","EditIcon","alt","deletarExpPorId","imgUpdloadFirebase","setimgUpdloadFirebase","imgUrl","setImgUrl","_useState5","_useState6","imgNaoAlterada","setImgNaoAlterada","_props$imgState","imgState","recarregarImgPerfil","setRecarregarImgPerfil","reiniciarImg","useEffect","AvatarComFoto","idUsuario","nome","nomeUsuario","recarregarImg","naoCarregar","type","file","files","startsWith","URL","createObjectURL","storageRef","storage","fileName","child","put","snapshot","ref","getDownloadURL","downloadURL","recarregarTodasImgs","avatarImgUrl","_props$funcoesModal","funcoesModal","abrirModalUploadFotoPerfil","visibilidadeModalFotoPerfil","fecharModalFecharModalUploadFotoPerfil","_props$infoUsuario","infoUsuario","notaAvaliacao","avaliacaoMedia","_props$imgPerfilState","imgPerfilState","avatarImgUrlRef","useRef","current","getImgPerfilURL","ModalUploadFotoPerfil","toFixed","Rating","name","defaultValue","precision","readOnly","size","ativarBuscaCep","setAtivarBuscaCep","email","dataNasc","sexo","bibliografia","cep","numero","complemento","dadosPerfilAntesDeEditar","setDadosPerfilAntesDeEditar","dadosPessoais","dadosEndereco","dadosSobreMim","dadosExperiencias","formDataDisable","setFormDataDisable","_useState7","cpf","dataNascFormatada","idade","logradouro","bairro","cidade","estado","_useState8","_useState9","errorNome","helperTextNome","errorEmail","helperTextEmail","errorDataNasc","helperTextDataNasc","_useState10","errorsDadosPessoais","setErrorsDadosPessoais","_useState11","errorSobreMim","helperTextSobreMim","_useState12","errorsSobreMim","setErrorsSobreMim","_useState13","errorCep","helperTextCep","errorNumero","helperTextNumero","_useState14","errorsDadosEndereco","setErrorsDadosEndereco","_useState15","_useState16","_useState17","_useState18","setVisibilidadeModalFotoPerfil","_useState19","_useState20","_useState21","_useState22","recarregarImgPagina","setRecarregarImgPagina","navigate","useNavigate","obterDadosPerfil","response","dadosUsuario","Date","toLocaleString","year","month","day","calcularIdade","endereco","formatDateToLocalDateSpring","date","parts","split","_verificarCep","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dadosViaCep","wrap","_context","prev","next","consultaCep","sent","localidade","uf","stop","apply","arguments","atualizarDadosPessoais","atualizasrSobreMim","usuarioBibliografia","atualizarDadosEndereco","dataAtual","getFullYear","mesAtual","getMonth","diaAtual","getDate","mesNascimento","diaNascimento","verificarToken","includes","length","verificarCep","EstruturaPaginaUsuario","FotoPerfil","SaveIcon","width","disabled","InputMask","mask","dataNascimento","dia","mes","ano","validaDataNascimento","FormControl","minWidth","InputLabel","Select","labelId","MenuItem","Textarea","placeholder","endDecorator","level","ml","FormHelperText","toLowerCase","style","justifyContent","map","i","CardExperiencias","num","token","_x","_consultaCep","axios","erro","abrupt"],"sourceRoot":""}