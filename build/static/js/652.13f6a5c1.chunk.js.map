{"version":3,"file":"static/js/652.13f6a5c1.chunk.js","mappings":"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","sources":["components/Global/Card/index.jsx","components/Admin/Dashboard/CardComTitulo/index.jsx","components/Admin/Dashboard/Graficos/Metricas/index.jsx","components/Admin/Dashboard/Graficos/Novo/UsuariosCadastradosMes/index.jsx","components/Admin/Dashboard/Graficos/Novo/AulaSemana/index.jsx","components/Admin/Dashboard/Graficos/AulasInfo/index.jsx","components/Admin/Dashboard/Graficos/Novo/AulasMes/index.jsx","components/Admin/Dashboard/Graficos/Novo/UsuariosCadastradosSemana/InformacaoAdicionalGrafico/index.jsx","components/Admin/Dashboard/Graficos/Novo/UsuariosCadastradosSemana/index.jsx","pages/Admin/Dashboard/Dashboard.jsx","utils/index.js"],"sourcesContent":["import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <Box className={`card ${props.className}`} sx={props.sx} id={props.id} onClick={props.onClick}>\r\n            {props.children}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from '../../../Global/Card/index.jsx';\r\nimport { Typography } from '@mui/material';\r\nimport './style.css';\r\n\r\nfunction CardComTitulo (props) {\r\n    return (\r\n        <Card className={props.className}>\r\n            <Typography className=\"card-titulo\">{props.titulo}</Typography>\r\n            {props.children}\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CardComTitulo;","import Card from \"../../CardComTitulo/index.jsx\";\r\nimport {\r\n    Box,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport \"./style.css\";\r\n\r\nfunction Metricas(props) {\r\n\r\n    return (\r\n        <Box className=\"metricas-container\">\r\n            {\r\n                props.metricas.map((metrica) =>\r\n                    (<Card key={metrica.id} className=\"card-metrica\" titulo={metrica.nome}>\r\n                        {\r\n                            metrica.id === 4 ?\r\n                                (<Typography className=\"card-valor\">R$ {metrica.valor}</Typography>)\r\n                                : <Typography className=\"card-valor\">{metrica.valor}</Typography>\r\n                        }\r\n                    </Card>))\r\n            }\r\n        </Box>\r\n\r\n    );\r\n}\r\n\r\nexport default Metricas;","import {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Card from '../../../CardComTitulo/index.jsx';\r\nimport { Box, Typography } from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport api from '../../../../../../api.js';\r\nimport './style.css';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nconst options = {\r\n    scales: {\r\n        x: {\r\n            grid: {\r\n                display: false,\r\n                drawBorder: false,\r\n                borderWidth: 0\r\n\r\n            },\r\n        },\r\n        y: {\r\n            grid: {\r\n            }\r\n        }\r\n    },\r\n    plugins: {\r\n        legend: {\r\n            display: true,\r\n            position: 'top',\r\n            align: 'end',\r\n            labels: {\r\n                usePointStyle: true\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nconst requisicaoGet = (url) => {\r\n    return api.get(url, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` } });\r\n}\r\n\r\nfunction UsuariosCadastrados(props) {\r\n\r\n    const [labels, setLabels] = useState([])\r\n    const [quantidadeTotalUsuarios, setQuantidadeTotalUsuarios] = useState(0);\r\n    const [usuariosMesAtual, setUsuariosMesAtual] = useState([]);\r\n    const [usuariosMesAnterior, setUsuariosMesAnterior] = useState([]);\r\n\r\n    const adicionaAviso = props.adicionaAviso;\r\n\r\n    const data = {\r\n        labels: labels,\r\n        datasets: [\r\n            {\r\n                label: 'Mês Atual',\r\n                data: usuariosMesAtual,\r\n                fill: false,\r\n                backgroundColor: 'rgb(54, 162, 235)',\r\n                borderColor: 'rgba(54, 162, 235, 1)',\r\n                pointRadius: 1.5,\r\n    \r\n            },\r\n            {\r\n                label: 'Mês Anterior',\r\n                data: usuariosMesAnterior,\r\n                fill: false,\r\n                backgroundColor: 'rgb(255, 99, 132)',\r\n                borderColor: 'rgba(255, 99, 132, 1)',\r\n                pointRadius: 1.5,\r\n            },\r\n    ]};\r\n\r\n    useEffect(() => {\r\n        requisicaoGet(\"/usuarios/quantidade-cadastrados-mes\").then(\r\n            (response) => {\r\n                const valores = response.data;\r\n                console.log(\"Usuários cadastrados no mês: \")\r\n                console.log(valores);\r\n\r\n                const dias = [];\r\n                for (let i = 1; i <= valores.length; i++) {\r\n                    dias.push(i);\r\n                }\r\n\r\n                setLabels(dias);\r\n                setUsuariosMesAtual(valores);\r\n                setQuantidadeTotalUsuarios(valores.reduce((a, b) => a + b, 0));\r\n            }\r\n        ).catch(() => {\r\n            adicionaAviso({\r\n                mensagem: \"Erro ao carregar usuários cadastrados no mês.\",\r\n                tipo: \"erro\"\r\n            });\r\n        });\r\n\r\n        requisicaoGet(\"/usuarios/quantidade-cadastrados-mes-anterior\").then(\r\n            (response) => {\r\n                const valores = response.data;\r\n                console.log(\"Usuários cadastrados no mês anterior: \")\r\n                console.log(valores);\r\n\r\n                setUsuariosMesAnterior(valores);\r\n            }\r\n        ).catch(() => {\r\n            adicionaAviso({\r\n                mensagem: \"Erro ao carregar usuários cadastrados no mês anterior.\",\r\n                tipo: \"erro\"\r\n            });\r\n        });\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Card className=\"card-cadastro-usuario\" titulo=\"Usuários cadastrados no mês\">\r\n            <Line data={data} options={options} />\r\n\r\n            <Box className=\"cadastro-mensal-container\">\r\n                <Typography className=\"cadastro-mensal-valor\">{quantidadeTotalUsuarios}</Typography>\r\n                <Typography className=\"cadastro-mensal-titulo\">Usuários cadastrados nesse mês</Typography>\r\n            </Box>\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\nexport default UsuariosCadastrados;","import { useEffect, useState } from \"react\";\r\nimport api from \"../../../../../../api\";\r\nimport \"./style.css\";\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    PointElement,\r\n    LineElement,\r\n    BarElement\r\n} from \"chart.js\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport Card from \"../../../CardComTitulo/index.jsx\";\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    PointElement,\r\n    LineElement,\r\n    BarElement\r\n);\r\n\r\nconst diasSemanaResumido = [\"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sab\", \"Dom\"]\r\nconst diasSemanaTraduzido = {\r\n    \"Seg\": \"Segunda\",\r\n    \"Ter\": \"Terça\",\r\n    \"Qua\": \"Quarta\",\r\n    \"Qui\": \"Quinta\",\r\n    \"Sex\": \"Sexta\",\r\n    \"Sab\": \"Sábado\",\r\n    \"Dom\": \"Domingo\"\r\n}\r\n\r\nconst options = {\r\n    responsive: true,\r\n    scales: {\r\n        x: {\r\n            stacked: true,\r\n            grid: {\r\n                display: false, // Configuração para ocultar as linhas verticais de grade no eixo x\r\n            },\r\n        },\r\n        y: {\r\n            stacked: true,\r\n            grid: {\r\n                display: true, // Configuração para ocultar as linhas verticais de grade no eixo x\r\n            },\r\n        },\r\n    },\r\n    interaction: {\r\n        intersect: true,\r\n        mode: 'index',\r\n    },\r\n\r\n    plugins: {\r\n        legend: {\r\n            display: true,\r\n            position: 'top',\r\n            align: 'end',\r\n            labels: {\r\n                usePointStyle: true\r\n            }\r\n        },\r\n        title: {\r\n            display: false\r\n        },\r\n        tooltip: {\r\n            callbacks: {\r\n                title: (toolTipItem, data) => {\r\n                    return diasSemanaTraduzido[toolTipItem[0].label]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \r\n};\r\n\r\n\r\nconst requisicaoGet = (url) => {\r\n    return api.get(url, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` } });\r\n}\r\n\r\nconst criarDataset = (label, data, cor) => {\r\n    return {\r\n        label: label,\r\n        data: data,\r\n        backgroundColor: cor,\r\n        borderColor: cor,\r\n        tension: 0.4,\r\n        pointRadius: 0.3,\r\n    }\r\n};\r\n\r\n\r\n\r\nfunction AulaSemana(props) {\r\n\r\n\r\n    const [aulasRealizadas, setAulasRealizadas] = useState([]);\r\n    const [aulasPendentes, setAulasPendentes] = useState([]);\r\n    const [aulasCanceladas, setAulasCanceladas] = useState([]);\r\n\r\n    const adicionaAviso = props.adicionaAviso;\r\n\r\n    const data = {\r\n        labels: diasSemanaResumido,\r\n        datasets: [\r\n            criarDataset(\"Canceladas\", aulasCanceladas, \"#FF6384\"),\r\n            criarDataset(\"Pendentes\", aulasPendentes, \"#FFCE56\"),\r\n            criarDataset(\"Realizadas\", aulasRealizadas, \"#00a65a\"),\r\n        ]\r\n    };\r\n    useEffect(() => {\r\n\r\n        Promise.all([requisicaoGet(\"/pedidos/quantidade-realizadas-semana\"),\r\n        requisicaoGet(\"/pedidos/quantidade-pendentes-semana\"),\r\n        requisicaoGet(\"/pedidos/quantidade-canceladas-semana\")]).then(\r\n            ([responseRealizadas, responsepPendentes, responseCanceladas]) => {\r\n                const realizadas = responseRealizadas.data;\r\n                const pendentes = responsepPendentes.data;\r\n                const canceladas = responseCanceladas.data;\r\n\r\n                console.log(\"Aulas Realizadas na semana: \")\r\n                console.log(realizadas);\r\n                console.log(\"Aulas Pendentes na semana: \")\r\n                console.log(pendentes);\r\n                console.log(\"Aulas Canceladas na semana: \")\r\n                console.log(canceladas);\r\n\r\n                setAulasRealizadas(realizadas);\r\n                setAulasPendentes(pendentes);\r\n                setAulasCanceladas(canceladas);\r\n            }\r\n        ).catch((erro) => {\r\n            console.log(erro)\r\n            adicionaAviso({\r\n                mensagem: \"Erro ao carregar aulas da semana.\",\r\n                tipo: \"erro\"\r\n            })\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Card className=\"card-quantidade-aulas\" titulo=\"Quantidade de aulas\">\r\n            <Bar data={data} options={options} />\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default AulaSemana;","import Card from \"../../../../Global/Card\";\r\nimport {\r\n    Box,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport \"./style.css\";\r\n\r\nfunction AulasInfo(props) {\r\n    const titulo = props.titulo;\r\n    const valor = props.valor;\r\n\r\n    return (\r\n        <Card className=\"card-body\">\r\n            <Box >\r\n                <Typography className=\"card-titulo titulo-kpi\">{titulo}</Typography>\r\n            </Box>\r\n            <Box className={`${props.className}`}>\r\n                <Typography className=\"card-texto\">{valor}</Typography>\r\n            </Box>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default AulasInfo;","import { useState, useEffect } from 'react';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Card from '../../../CardComTitulo/index.jsx';\r\n\r\nimport api from '../../../../../../api.js';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nconst options = {\r\n    scales: {\r\n        x: {\r\n            grid: {\r\n                display: false,\r\n                drawBorder: false,\r\n                borderWidth: 0\r\n\r\n            },\r\n        },\r\n        y: {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            min: 0\r\n          },\r\n          y1: {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'right',\r\n            grid: {\r\n              drawOnChartArea: false,\r\n            },\r\n            min: 0\r\n        }\r\n    },\r\n    plugins: {\r\n        legend: {\r\n            display: true,\r\n            position: 'top',\r\n            align: 'end',\r\n            labels: {\r\n                usePointStyle: true\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nconst requisicaoGet = (url) => {\r\n    return api.get(url, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` } });\r\n}\r\n\r\nfunction AulasMes(props) {\r\n    const [aulasMes, setAulasMes] = useState([]);\r\n    const [rendimentoMes, setRendimentoMes] = useState([]);\r\n    const [labels, setLabels] = useState([]);\r\n\r\n    const data = {\r\n        labels: labels,\r\n        datasets: [\r\n            {\r\n                label: 'Aulas por dia',\r\n                data: aulasMes,\r\n                fill: false,\r\n                backgroundColor: 'rgb(54, 162, 235)',\r\n                borderColor: 'rgba(54, 162, 235, 1)',\r\n                pointRadius: 1.5,\r\n                yAxisID: 'y',\r\n            },\r\n            {\r\n                label: 'Rendimento por dia',\r\n                data: rendimentoMes,\r\n                fill: false,\r\n                backgroundColor: 'rgb(255, 99, 132)',\r\n                borderColor: 'rgba(255, 99, 132, 1)',\r\n                pointRadius: 1.5,\r\n                yAxisID: 'y1',\r\n            },\r\n    ]};\r\n    useEffect(() => {\r\n        requisicaoGet(\"/pedidos/quantidade-mes-por-dia\")\r\n            .then(resposta => {\r\n                \r\n                console.log(\"Recebi a resposta das aulas por dia: \")\r\n                console.log(resposta.data)\r\n\r\n                const dias = [];\r\n                for (let i = 1; i <= resposta.data.length; i++) {\r\n                    dias.push(i);\r\n                }\r\n\r\n                setLabels(dias);\r\n\r\n                setAulasMes(resposta.data);\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n            });\r\n        requisicaoGet(\"/pedidos/rendimento-mes-por-dia\")\r\n            .then(resposta => {\r\n\r\n                console.log(\"Recebi a resposta do rendimento por dia: \")\r\n                console.log(resposta.data)\r\n\r\n                setRendimentoMes(resposta.data);\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n            });\r\n    }, []);\r\n\r\n    \r\n    return (\r\n        <Card titulo=\"Aulas e rendimento no mês\">\r\n            <Line data={data} options={options} />\r\n        </Card>\r\n    )\r\n\r\n}\r\n\r\nexport default AulasMes;","import {\r\n    Box,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport \"./style.css\";\r\n\r\nfunction InformacaoAdicionalGrafico(props) {\r\n    return (\r\n        <Box className=\"taxa-container\">\r\n            <Typography className=\"quantidade-usuario-titulo\">\r\n               {/*  <FiberManualRecordIcon sx={{\r\n                    fontSize: \"var(----fonte-h6)\"\r\n                }} /> */}\r\n                {props.nome}\r\n            </Typography>\r\n            <Typography className=\"quantidade-usuario-valor\">{props.valor} ({(props.valor / props.valorTotal) * 100}%)</Typography>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default InformacaoAdicionalGrafico;","import { useState, useEffect } from \"react\";\r\nimport api from \"../../../../../../api.js\";\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    PointElement,\r\n    LineElement,\r\n    BarElement\r\n} from \"chart.js\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport Card from \"../../../CardComTitulo/index.jsx\";\r\nimport \"./style.css\";\r\nimport { Box } from \"@mui/material\";\r\nimport InformacaoAdicionalGrafico from \"./InformacaoAdicionalGrafico/index.jsx\";\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    PointElement,\r\n    LineElement,\r\n    BarElement\r\n);\r\n\r\nconst diasSemanaResumido = [\"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sab\", \"Dom\"]\r\nconst diasSemanaTraduzido = {\r\n    \"Seg\": \"Segunda\",\r\n    \"Ter\": \"Terça\",\r\n    \"Qua\": \"Quarta\",\r\n    \"Qui\": \"Quinta\",\r\n    \"Sex\": \"Sexta\",\r\n    \"Sab\": \"Sábado\",\r\n    \"Dom\": \"Domingo\"\r\n}\r\n\r\nconst options = {\r\n    responsive: true,\r\n    scales: {\r\n        x: {\r\n            stacked: 10,\r\n            grid: {\r\n                display: false, // Configuração para ocultar as linhas verticais de grade no eixo x\r\n            },\r\n        },\r\n        y: {\r\n            stacked: true,\r\n            grid: {\r\n                display: true, // Configuração para ocultar as linhas verticais de grade no eixo x\r\n            },\r\n        },\r\n    },\r\n    interaction: {\r\n        intersect: true,\r\n        mode: 'index',\r\n    },\r\n\r\n    plugins: {\r\n        legend: {\r\n            display: true,\r\n            position: 'top',\r\n            align: 'end',\r\n            labels: {\r\n                usePointStyle: true\r\n            }\r\n        },\r\n        title: {\r\n            display: false\r\n        },\r\n        tooltip: {\r\n            callbacks: {\r\n                title: (toolTipItem, data) => {\r\n                    return diasSemanaTraduzido[toolTipItem[0].label]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \r\n};\r\n\r\nconst requisicaoGet = (url) => {\r\n    return api.get(url, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` } });\r\n}\r\n\r\nconst criarDataset = (label, data, cor) => {\r\n    return {\r\n        label: label,\r\n        data: data,\r\n        backgroundColor: cor,\r\n        borderColor: cor,\r\n        tension: 0.4,\r\n        pointRadius: 0.3,\r\n    }\r\n};\r\n\r\n\r\nfunction UsuariosCadastradosSemana(props) {\r\n\r\n    const [alunosCadastradados, setAlunosCadastradados] = useState([]);\r\n    const [professoresCadastradados, setProfessoresCadastradados] = useState([]);\r\n\r\n    const adicionaAviso = props.adicionaAviso;\r\n\r\n    const data = {\r\n        labels: diasSemanaResumido,\r\n        datasets: [\r\n            criarDataset(\"Alunos Cadastrados\", alunosCadastradados, \"#FF6384\"),\r\n            criarDataset(\"Professores Cadastrados\", professoresCadastradados, \"#36A2EB\"),\r\n            /* criarDataset(\"Alunos Cadastrados na semana passada\", alunosCadastradados, \"#FF6384\"),\r\n            criarDataset(\"Professores Cadastrados na semana passada\", professoresCadastradados, \"#36A2EB\"), */\r\n        ]\r\n    };\r\n\r\n    useEffect(() => {\r\n        Promise.all([\r\n            requisicaoGet(\"/alunos/quantidade-cadastrados-semana\"),\r\n            requisicaoGet(\"/professores/quantidade-cadastrados-semana\"),\r\n        ]).then(\r\n            ([responseAlunos, responseProfessores]) => {\r\n                const valoresResponseAlunos = responseAlunos.data;\r\n                const valoresResponseProfessores = responseProfessores.data;\r\n\r\n                console.log(\"Alunos cadastrados na semana: \")\r\n                console.log(valoresResponseAlunos);\r\n                console.log(\"Professores cadastrados na semana: \")\r\n                console.log(valoresResponseProfessores);\r\n\r\n                setAlunosCadastradados(valoresResponseAlunos);\r\n                setProfessoresCadastradados(valoresResponseProfessores);\r\n            }\r\n        ).catch((err) => {\r\n            adicionaAviso({\r\n                mensagem: \"Erro ao carregar usuários cadastrados na semana\",\r\n                tipo: \"erro\"\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    const valorTotalUsuarios = alunosCadastradados.reduce((a, b) => a + b, 0) + professoresCadastradados.reduce((a, b) => a + b, 0);\r\n\r\n    return (\r\n        <Card className=\"card-cadastro-usuario-semana\" titulo=\"Usuários cadastrados na semana\">\r\n            <Bar data={data} options={options}/>\r\n\r\n            <Box className=\"informacao-adicional-container\">\r\n            <InformacaoAdicionalGrafico nome=\"Alunos cadastrados:\" valor={alunosCadastradados.reduce((a, b) => a + b, 0)} valorTotal={valorTotalUsuarios}/>\r\n            <InformacaoAdicionalGrafico nome=\"Professores cadastrados:\" valor={professoresCadastradados.reduce((a, b) => a + b, 0)} valorTotal={valorTotalUsuarios}/>\r\n            </Box>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default UsuariosCadastradosSemana;","import { useState, useEffect } from 'react';\r\nimport { verificarToken } from \"../../../utils/index.js\";\r\n\r\n/* Componentes */\r\nimport EstruturaPaginaUsuario from \"../../../components/Global/EstruturaPaginaUsuario/Main/index.jsx\";\r\nimport { Box } from \"@mui/material\";\r\nimport Metricas from \"../../../components/Admin/Dashboard/Graficos/Metricas/index.jsx\";\r\nimport UsuariosCadastrados from \"../../../components/Admin/Dashboard/Graficos/Novo/UsuariosCadastradosMes/index.jsx\";\r\nimport AulasSemana from '../../../components/Admin/Dashboard/Graficos/Novo/AulaSemana/index.jsx';\r\nimport AulasInfo from '../../../components/Admin/Dashboard/Graficos/AulasInfo/index.jsx';\r\nimport AulasMes from '../../../components/Admin/Dashboard/Graficos/Novo/AulasMes/index.jsx';\r\nimport api from '../../../api.js';\r\n\r\n/* import Mapa from \"../../../components/Admin/Dashboard/MapaBrasil/index.jsx\"; */\r\n/* Css */\r\nimport \"./style.css\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport UsuariosCadastradosSemana from '../../../components/Admin/Dashboard/Graficos/Novo/UsuariosCadastradosSemana/index.jsx';\r\n\r\nconst requisicaoGet = (url) => {\r\n    return api.get(url, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` } });\r\n}\r\n\r\nfunction DashboardAdmin(props) {\r\n    const [avisos, setAvisos] = useState([]);\r\n\r\n    const adicionaAviso = (novoAviso) => {\r\n        setAvisos([...avisos, novoAviso]);\r\n    }\r\n\r\n    const [metricas, setMetricas] = useState([\r\n        {\r\n            id: 1,\r\n            nome: \"Usuários\",\r\n            endpoint: \"/usuarios/quantidade-cadastrados-mes-soma\",\r\n            valor: 0,\r\n        },\r\n        {\r\n            id: 2,\r\n            nome: \"Aulas por aluno\",\r\n            endpoint: \"/aulas/quantidade-por-aluno-mes\",\r\n            valor: 0,\r\n        },\r\n        {\r\n            id: 3,\r\n            nome: \"Aulas\",\r\n            endpoint: \"/aulas/quantidade-mes\",\r\n            valor: 0,\r\n        },\r\n        {\r\n            id: 4,\r\n            nome: \"Rendimento dos Professores\",\r\n            endpoint: \"/professores/dashboard/rendimentoTotal\",\r\n            valor: 0,\r\n        }\r\n    ]);\r\n\r\n    const [valorAulas, setValorAulas] = useState([\r\n        {\r\n            id: 1,\r\n            nome: \"Aulas Realizadas\",\r\n            endpoint: \"/pedidos/quantidade-realizadas-semana-total\",\r\n            valor: 0,\r\n        }, {\r\n            id: 2,\r\n            nome: \"Aulas Pendentes\",\r\n            endpoint: \"/pedidos/quantidade-pendentes-semana-total\",\r\n            valor: 0,\r\n        }, {\r\n            id: 3,\r\n            nome: \"Aulas Canceladas\",\r\n            endpoint: \"/pedidos/quantidade-canceladas-semana-total\",\r\n            valor: 0,\r\n        }\r\n    ]);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (verificarToken()) navigate(\"/login\");\r\n\r\n        metricas.forEach(metrica => {\r\n            if (metrica.id !== 4) {\r\n                requisicaoGet(metrica.endpoint).then((resposta) => {\r\n                    setMetricas(metricas => metricas.map(metricaAntiga => {\r\n                        if (metricaAntiga.id === metrica.id) {\r\n                            metricaAntiga.valor = resposta.data;\r\n                        }\r\n                        return metricaAntiga;\r\n                    }));\r\n            }).catch(() => adicionaAviso({\r\n                mensagem: `Erro ao obter quantidade de ${metrica.nome}`,\r\n                tipo: \"erro\"\r\n            }));\r\n            }\r\n        });\r\n\r\n        valorAulas.forEach(valorAula => {\r\n            if (valorAula.id !== 4) {\r\n                requisicaoGet(valorAula.endpoint).then((resposta) => {\r\n                    setValorAulas(valorAulas => [...valorAulas.map(valorAulaAntigo => {\r\n                        if (valorAulaAntigo.id === valorAula.id) {\r\n                            valorAulaAntigo.valor = resposta.data;\r\n                        }\r\n                        return valorAulaAntigo;\r\n                    })])\r\n                }).catch(() => adicionaAviso({\r\n                    mensagem: `Erro ao obter quantidade de ${valorAula.nome}`,\r\n                    tipo: \"erro\"\r\n                }));\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <EstruturaPaginaUsuario tela=\"dashboard\" avisosState={{ avisos, setAvisos }}>\r\n            <Box className=\"pagina-container\">\r\n                <Metricas metricas={metricas} />\r\n                <Box className=\"secao secao-usuarios-retidos-cadastrados\">\r\n                    <AulasMes />\r\n                    <UsuariosCadastrados adicionaAviso={adicionaAviso} />\r\n                    <UsuariosCadastradosSemana adicionaAviso={adicionaAviso} />\r\n                </Box>\r\n                <Box className=\"secao secao-aulas\">\r\n                <AulasSemana adicionaAviso={adicionaAviso}/>\r\n                    <AulasInfo className=\"realizadas\" titulo=\"Aulas Realizadas na semana\" valor={valorAulas[0].valor} />\r\n                    <AulasInfo className=\"pendentes\" titulo=\"Aulas Pendentes na semana\" valor={valorAulas[1].valor} />\r\n                    <AulasInfo className=\"canceladas\" titulo=\"Aulas Canceladas na semana\" valor={valorAulas[2].valor} />\r\n                </Box>\r\n            </Box>\r\n        </EstruturaPaginaUsuario>\r\n    );\r\n}\r\n\r\nexport default DashboardAdmin; ","import axios from 'axios';\r\n\r\nfunction verificarToken() {\r\n    let token = sessionStorage.TOKEN;\r\n\r\n    if (token === null || token === \"\" || token.length < 186) {\r\n        sessionStorage.TOKEN = \"\";\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction validaDataNascimento(dataNascimento) {\r\n    dataNascimento = dataNascimento.split('/');\r\n    let dia = dataNascimento[0];\r\n    let mes = dataNascimento[1];\r\n    let ano = dataNascimento[2];\r\n\r\n    if (dia < 1 || dia > 31) return { error: true, helperText: 'Dia inválido' };\r\n    else if (mes < 1 || mes > 12) return { error: true, helperText: 'Mês inválido' };\r\n    else if (ano < 1900 || ano > new Date().getFullYear()) return { error: true, helperText: 'Ano inválido' };\r\n\r\n    let data = new Date(ano, mes - 1, dia), dataAtual = new Date();\r\n\r\n    if (data > dataAtual) {\r\n        return {\r\n            error: true,\r\n            helperText: 'Data de Nascimento inválida'\r\n        }\r\n    }\r\n\r\n    return {\r\n        error: false,\r\n    };\r\n}\r\n\r\nasync function consultaCep(cep) {\r\n    let dadosViaCep = {}\r\n\r\n    await axios.get(`https://viacep.com.br/ws/${cep}/json/`)\r\n        .then((res) => {\r\n\r\n            if (res.data.erro) dadosViaCep = null;\r\n            else dadosViaCep = res.data;\r\n\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n\r\n    console.log(\"Resposta:\")\r\n    console.log(dadosViaCep)\r\n    return dadosViaCep;\r\n}\r\n\r\nexport {\r\n    verificarToken,\r\n    validaDataNascimento,\r\n    consultaCep\r\n};"],"names":["props","_jsx","Box","className","concat","sx","id","onClick","children","_jsxs","Card","Typography","titulo","metricas","map","metrica","nome","valor","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","options","scales","x","grid","display","drawBorder","borderWidth","y","plugins","legend","position","align","labels","usePointStyle","requisicaoGet","url","api","headers","Authorization","sessionStorage","TOKEN","_useState","useState","_useState2","_slicedToArray","setLabels","_useState3","_useState4","quantidadeTotalUsuarios","setQuantidadeTotalUsuarios","_useState5","_useState6","usuariosMesAtual","setUsuariosMesAtual","_useState7","_useState8","usuariosMesAnterior","setUsuariosMesAnterior","adicionaAviso","data","datasets","label","fill","backgroundColor","borderColor","pointRadius","useEffect","then","response","valores","console","log","dias","i","length","push","reduce","a","b","catch","mensagem","tipo","Line","BarElement","diasSemanaResumido","diasSemanaTraduzido","responsive","stacked","interaction","intersect","mode","title","tooltip","callbacks","toolTipItem","criarDataset","cor","tension","aulasRealizadas","setAulasRealizadas","aulasPendentes","setAulasPendentes","aulasCanceladas","setAulasCanceladas","Promise","all","_ref","_ref2","responseRealizadas","responsepPendentes","responseCanceladas","realizadas","pendentes","canceladas","erro","Bar","type","min","y1","drawOnChartArea","aulasMes","setAulasMes","rendimentoMes","setRendimentoMes","yAxisID","resposta","valorTotal","alunosCadastradados","setAlunosCadastradados","professoresCadastradados","setProfessoresCadastradados","responseAlunos","responseProfessores","valoresResponseAlunos","valoresResponseProfessores","err","valorTotalUsuarios","InformacaoAdicionalGrafico","avisos","setAvisos","novoAviso","_toConsumableArray","endpoint","setMetricas","valorAulas","setValorAulas","navigate","useNavigate","verificarToken","forEach","metricaAntiga","valorAula","valorAulaAntigo","EstruturaPaginaUsuario","tela","avisosState","Metricas","AulasMes","UsuariosCadastrados","UsuariosCadastradosSemana","AulasSemana","AulasInfo","token","validaDataNascimento","dataNascimento","dia","split","mes","ano","error","helperText","Date","getFullYear","consultaCep","_x","_consultaCep","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","cep","dadosViaCep","wrap","_context","prev","next","axios","res","abrupt","stop"],"sourceRoot":""}