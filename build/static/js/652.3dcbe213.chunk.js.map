{"version":3,"file":"static/js/652.3dcbe213.chunk.js","mappings":"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","sources":["components/Global/Card/index.jsx","components/Admin/Dashboard/CardComTitulo/index.jsx","components/Admin/Dashboard/Graficos/Metricas/index.jsx","components/Admin/Dashboard/Graficos/Novo/UsuariosCadastradosMes/index.jsx","components/Admin/Dashboard/Graficos/Novo/AulaSemana/index.jsx","components/Admin/Dashboard/Graficos/AulasInfo/index.jsx","components/Admin/Dashboard/Graficos/Novo/AulasMes/index.jsx","components/Admin/Dashboard/Graficos/Novo/UsuariosCadastradosSemana/InformacaoAdicionalGrafico/index.jsx","components/Admin/Dashboard/Graficos/Novo/UsuariosCadastradosSemana/index.jsx","pages/Admin/Dashboard/Dashboard.jsx","utils/index.js"],"sourcesContent":["import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport \"./style.css\";\n\n\nfunction Card(props) {\n    return (\n        <Box className={`card ${props.className}`} sx={props.sx} id={props.id} onClick={props.onClick}>\n            {props.children}\n        </Box>\n    );\n}\n\nexport default Card;","import Card from '../../../Global/Card/index.jsx';\nimport { Typography } from '@mui/material';\nimport './style.css';\n\nfunction CardComTitulo (props) {\n    return (\n        <Card className={props.className}>\n            <Typography className=\"card-titulo\">{props.titulo}</Typography>\n            {props.children}\n        </Card>\n    );\n}\n\nexport default CardComTitulo;","import Card from \"../../CardComTitulo/index.jsx\";\nimport {\n    Box,\n    Typography\n} from \"@mui/material\";\nimport \"./style.css\";\n\nfunction Metricas(props) {\n\n    return (\n        <Box className=\"metricas-container\">\n            {\n                props.metricas.map((metrica) =>\n                    (<Card key={metrica.id} className=\"card-metrica\" titulo={metrica.nome}>\n                        {\n                            metrica.id === 4 ?\n                                (<Typography className=\"card-valor\">R$ {metrica.valor}</Typography>)\n                                : <Typography className=\"card-valor\">{metrica.valor}</Typography>\n                        }\n                    </Card>))\n            }\n        </Box>\n\n    );\n}\n\nexport default Metricas;","import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport Card from '../../../CardComTitulo/index.jsx';\nimport { Box, Typography } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport api from '../../../../../../api.js';\nimport './style.css';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nconst options = {\n    scales: {\n        x: {\n            grid: {\n                display: false,\n                drawBorder: false,\n                borderWidth: 0\n\n            },\n        },\n        y: {\n            grid: {\n            }\n        }\n    },\n    plugins: {\n        legend: {\n            display: true,\n            position: 'top',\n            align: 'end',\n            labels: {\n                usePointStyle: true\n            }\n        }\n    }\n};\n\nconst requisicaoGet = (url) => {\n    return api.get(url, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` } });\n}\n\nfunction UsuariosCadastrados(props) {\n\n    const [labels, setLabels] = useState([])\n    const [quantidadeTotalUsuarios, setQuantidadeTotalUsuarios] = useState(0);\n    const [usuariosMesAtual, setUsuariosMesAtual] = useState([]);\n    const [usuariosMesAnterior, setUsuariosMesAnterior] = useState([]);\n\n    const adicionaAviso = props.adicionaAviso;\n\n    const data = {\n        labels: labels,\n        datasets: [\n            {\n                label: 'Mês Atual',\n                data: usuariosMesAtual,\n                fill: false,\n                backgroundColor: 'rgb(54, 162, 235)',\n                borderColor: 'rgba(54, 162, 235, 1)',\n                pointRadius: 1.5,\n    \n            },\n            {\n                label: 'Mês Anterior',\n                data: usuariosMesAnterior,\n                fill: false,\n                backgroundColor: 'rgb(255, 99, 132)',\n                borderColor: 'rgba(255, 99, 132, 1)',\n                pointRadius: 1.5,\n            },\n    ]};\n\n    useEffect(() => {\n        requisicaoGet(\"/usuarios/quantidade-cadastrados-mes\").then(\n            (response) => {\n                const valores = response.data;\n                console.log(\"Usuários cadastrados no mês: \")\n                console.log(valores);\n\n                const dias = [];\n                for (let i = 1; i <= valores.length; i++) {\n                    dias.push(i);\n                }\n\n                setLabels(dias);\n                setUsuariosMesAtual(valores);\n                setQuantidadeTotalUsuarios(valores.reduce((a, b) => a + b, 0));\n            }\n        ).catch(() => {\n            adicionaAviso({\n                mensagem: \"Erro ao carregar usuários cadastrados no mês.\",\n                tipo: \"erro\"\n            });\n        });\n\n        requisicaoGet(\"/usuarios/quantidade-cadastrados-mes-anterior\").then(\n            (response) => {\n                const valores = response.data;\n                console.log(\"Usuários cadastrados no mês anterior: \")\n                console.log(valores);\n\n                setUsuariosMesAnterior(valores);\n            }\n        ).catch(() => {\n            adicionaAviso({\n                mensagem: \"Erro ao carregar usuários cadastrados no mês anterior.\",\n                tipo: \"erro\"\n            });\n        });\n\n    }, []);\n\n\n    return (\n        <Card className=\"card-cadastro-usuario\" titulo=\"Usuários cadastrados no mês\">\n            <Line data={data} options={options} />\n\n            <Box className=\"cadastro-mensal-container\">\n                <Typography className=\"cadastro-mensal-valor\">{quantidadeTotalUsuarios}</Typography>\n                <Typography className=\"cadastro-mensal-titulo\">Usuários cadastrados nesse mês</Typography>\n            </Box>\n        </Card>\n    );\n}\n\n\nexport default UsuariosCadastrados;","import { useEffect, useState } from \"react\";\nimport api from \"../../../../../../api\";\nimport \"./style.css\";\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    Title,\n    Tooltip,\n    Legend,\n    PointElement,\n    LineElement,\n    BarElement\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport Card from \"../../../CardComTitulo/index.jsx\";\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    Title,\n    Tooltip,\n    Legend,\n    PointElement,\n    LineElement,\n    BarElement\n);\n\nconst diasSemanaResumido = [\"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sab\", \"Dom\"]\nconst diasSemanaTraduzido = {\n    \"Seg\": \"Segunda\",\n    \"Ter\": \"Terça\",\n    \"Qua\": \"Quarta\",\n    \"Qui\": \"Quinta\",\n    \"Sex\": \"Sexta\",\n    \"Sab\": \"Sábado\",\n    \"Dom\": \"Domingo\"\n}\n\nconst options = {\n    responsive: true,\n    scales: {\n        x: {\n            stacked: true,\n            grid: {\n                display: false, // Configuração para ocultar as linhas verticais de grade no eixo x\n            },\n        },\n        y: {\n            stacked: true,\n            grid: {\n                display: true, // Configuração para ocultar as linhas verticais de grade no eixo x\n            },\n        },\n    },\n    interaction: {\n        intersect: true,\n        mode: 'index',\n    },\n\n    plugins: {\n        legend: {\n            display: true,\n            position: 'top',\n            align: 'end',\n            labels: {\n                usePointStyle: true\n            }\n        },\n        title: {\n            display: false\n        },\n        tooltip: {\n            callbacks: {\n                title: (toolTipItem, data) => {\n                    return diasSemanaTraduzido[toolTipItem[0].label]\n                }\n            }\n        }\n    },\n    \n};\n\n\nconst requisicaoGet = (url) => {\n    return api.get(url, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` } });\n}\n\nconst criarDataset = (label, data, cor) => {\n    return {\n        label: label,\n        data: data,\n        backgroundColor: cor,\n        borderColor: cor,\n        tension: 0.4,\n        pointRadius: 0.3,\n    }\n};\n\n\n\nfunction AulaSemana(props) {\n\n\n    const [aulasRealizadas, setAulasRealizadas] = useState([]);\n    const [aulasPendentes, setAulasPendentes] = useState([]);\n    const [aulasCanceladas, setAulasCanceladas] = useState([]);\n\n    const adicionaAviso = props.adicionaAviso;\n\n    const data = {\n        labels: diasSemanaResumido,\n        datasets: [\n            criarDataset(\"Canceladas\", aulasCanceladas, \"#FF6384\"),\n            criarDataset(\"Pendentes\", aulasPendentes, \"#FFCE56\"),\n            criarDataset(\"Realizadas\", aulasRealizadas, \"#00a65a\"),\n        ]\n    };\n    useEffect(() => {\n\n        Promise.all([requisicaoGet(\"/pedidos/quantidade-realizadas-semana\"),\n        requisicaoGet(\"/pedidos/quantidade-pendentes-semana\"),\n        requisicaoGet(\"/pedidos/quantidade-canceladas-semana\")]).then(\n            ([responseRealizadas, responsepPendentes, responseCanceladas]) => {\n                const realizadas = responseRealizadas.data;\n                const pendentes = responsepPendentes.data;\n                const canceladas = responseCanceladas.data;\n\n                console.log(\"Aulas Realizadas na semana: \")\n                console.log(realizadas);\n                console.log(\"Aulas Pendentes na semana: \")\n                console.log(pendentes);\n                console.log(\"Aulas Canceladas na semana: \")\n                console.log(canceladas);\n\n                setAulasRealizadas(realizadas);\n                setAulasPendentes(pendentes);\n                setAulasCanceladas(canceladas);\n            }\n        ).catch((erro) => {\n            console.log(erro)\n            adicionaAviso({\n                mensagem: \"Erro ao carregar aulas da semana.\",\n                tipo: \"erro\"\n            })\n        });\n    }, []);\n\n    return (\n        <Card className=\"card-quantidade-aulas\" titulo=\"Quantidade de aulas\">\n            <Bar data={data} options={options} />\n        </Card>\n    );\n}\n\nexport default AulaSemana;","import Card from \"../../../../Global/Card\";\nimport {\n    Box,\n    Typography\n} from \"@mui/material\";\nimport \"./style.css\";\n\nfunction AulasInfo(props) {\n    const titulo = props.titulo;\n    const valor = props.valor;\n\n    return (\n        <Card className=\"card-body\">\n            <Box >\n                <Typography className=\"card-titulo titulo-kpi\">{titulo}</Typography>\n            </Box>\n            <Box className={`${props.className}`}>\n                <Typography className=\"card-texto\">{valor}</Typography>\n            </Box>\n        </Card>\n    );\n}\n\nexport default AulasInfo;","import { useState, useEffect } from 'react';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport Card from '../../../CardComTitulo/index.jsx';\n\nimport api from '../../../../../../api.js';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nconst options = {\n    scales: {\n        x: {\n            grid: {\n                display: false,\n                drawBorder: false,\n                borderWidth: 0\n\n            },\n        },\n        y: {\n            type: 'linear',\n            display: true,\n            position: 'left',\n            min: 0\n          },\n          y1: {\n            type: 'linear',\n            display: true,\n            position: 'right',\n            grid: {\n              drawOnChartArea: false,\n            },\n            min: 0\n        }\n    },\n    plugins: {\n        legend: {\n            display: true,\n            position: 'top',\n            align: 'end',\n            labels: {\n                usePointStyle: true\n            }\n        }\n    }\n};\n\nconst requisicaoGet = (url) => {\n    return api.get(url, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` } });\n}\n\nfunction AulasMes(props) {\n    const [aulasMes, setAulasMes] = useState([]);\n    const [rendimentoMes, setRendimentoMes] = useState([]);\n    const [labels, setLabels] = useState([]);\n\n    const data = {\n        labels: labels,\n        datasets: [\n            {\n                label: 'Aulas por dia',\n                data: aulasMes,\n                fill: false,\n                backgroundColor: 'rgb(54, 162, 235)',\n                borderColor: 'rgba(54, 162, 235, 1)',\n                pointRadius: 1.5,\n                yAxisID: 'y',\n            },\n            {\n                label: 'Rendimento por dia',\n                data: rendimentoMes,\n                fill: false,\n                backgroundColor: 'rgb(255, 99, 132)',\n                borderColor: 'rgba(255, 99, 132, 1)',\n                pointRadius: 1.5,\n                yAxisID: 'y1',\n            },\n    ]};\n    useEffect(() => {\n        requisicaoGet(\"/pedidos/quantidade-mes-por-dia\")\n            .then(resposta => {\n                \n                console.log(\"Recebi a resposta das aulas por dia: \")\n                console.log(resposta.data)\n\n                const dias = [];\n                for (let i = 1; i <= resposta.data.length; i++) {\n                    dias.push(i);\n                }\n\n                setLabels(dias);\n\n                setAulasMes(resposta.data);\n            })\n            .catch(erro => {\n                console.log(erro);\n            });\n        requisicaoGet(\"/pedidos/rendimento-mes-por-dia\")\n            .then(resposta => {\n\n                console.log(\"Recebi a resposta do rendimento por dia: \")\n                console.log(resposta.data)\n\n                setRendimentoMes(resposta.data);\n            })\n            .catch(erro => {\n                console.log(erro);\n            });\n    }, []);\n\n    \n    return (\n        <Card titulo=\"Aulas e rendimento no mês\">\n            <Line data={data} options={options} />\n        </Card>\n    )\n\n}\n\nexport default AulasMes;","import React, { useEffect, useState } from \"react\";\nimport {\n    Box,\n    Typography\n} from \"@mui/material\";\nimport \"./style.css\";\n\nfunction InformacaoAdicionalGrafico(props) {\n\n    const [porcentagem, setPorcentagem] = useState(0);\n\n    useEffect(() => {\n        if (props.valor > 0 && props.total > 0) {\n            setPorcentagem(((props.valor * 100) / props.total).toFixed(2));\n        }\n    }, [props.valor, props.total]);\n\n    return (\n        <Box className=\"taxa-container\">\n            <Typography className=\"quantidade-usuario-titulo\">\n               {/*  <FiberManualRecordIcon sx={{\n                    fontSize: \"var(----fonte-h6)\"\n                }} /> */}\n                {props.nome}\n            </Typography>\n            <Typography className=\"quantidade-usuario-valor\">{props.valor} ({porcentagem}%)</Typography>\n        </Box>\n    );\n}\n\nexport default InformacaoAdicionalGrafico;","import { useState, useEffect } from \"react\";\nimport api from \"../../../../../../api.js\";\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    Title,\n    Tooltip,\n    Legend,\n    PointElement,\n    LineElement,\n    BarElement\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport Card from \"../../../CardComTitulo/index.jsx\";\nimport \"./style.css\";\nimport { Box } from \"@mui/material\";\nimport InformacaoAdicionalGrafico from \"./InformacaoAdicionalGrafico/index.jsx\";\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    Title,\n    Tooltip,\n    Legend,\n    PointElement,\n    LineElement,\n    BarElement\n);\n\nconst diasSemanaResumido = [\"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sab\", \"Dom\"]\nconst diasSemanaTraduzido = {\n    \"Seg\": \"Segunda\",\n    \"Ter\": \"Terça\",\n    \"Qua\": \"Quarta\",\n    \"Qui\": \"Quinta\",\n    \"Sex\": \"Sexta\",\n    \"Sab\": \"Sábado\",\n    \"Dom\": \"Domingo\"\n}\n\nconst options = {\n    responsive: true,\n    scales: {\n        x: {\n            stacked: 10,\n            grid: {\n                display: false, // Configuração para ocultar as linhas verticais de grade no eixo x\n            },\n        },\n        y: {\n            stacked: true,\n            grid: {\n                display: true, // Configuração para ocultar as linhas verticais de grade no eixo x\n            },\n        },\n    },\n    interaction: {\n        intersect: true,\n        mode: 'index',\n    },\n\n    plugins: {\n        legend: {\n            display: true,\n            position: 'top',\n            align: 'end',\n            labels: {\n                usePointStyle: true\n            }\n        },\n        title: {\n            display: false\n        },\n        tooltip: {\n            callbacks: {\n                title: (toolTipItem, data) => {\n                    return diasSemanaTraduzido[toolTipItem[0].label]\n                }\n            }\n        }\n    },\n    \n};\n\nconst requisicaoGet = (url) => {\n    return api.get(url, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` } });\n}\n\nconst criarDataset = (label, data, cor) => {\n    return {\n        label: label,\n        data: data,\n        backgroundColor: cor,\n        borderColor: cor,\n        tension: 0.4,\n        pointRadius: 0.3,\n    }\n};\n\n\nfunction UsuariosCadastradosSemana(props) {\n\n    const [alunosCadastrados, setAlunosCadastrados] = useState([]);\n    const [professoresCadastrados, setProfessoresCadastrados] = useState([]);\n\n    const adicionaAviso = props.adicionaAviso;\n\n    const data = {\n        labels: diasSemanaResumido,\n        datasets: [\n            criarDataset(\"Alunos Cadastrados\", alunosCadastrados, \"#FF6384\"),\n            criarDataset(\"Professores Cadastrados\", professoresCadastrados, \"#36A2EB\"),\n            /* criarDataset(\"Alunos Cadastrados na semana passada\", alunosCadastradados, \"#FF6384\"),\n            criarDataset(\"Professores Cadastrados na semana passada\", professoresCadastradados, \"#36A2EB\"), */\n        ]\n    };\n\n    useEffect(() => {\n        Promise.all([\n            requisicaoGet(\"/alunos/quantidade-cadastrados-semana\"),\n            requisicaoGet(\"/professores/quantidade-cadastrados-semana\"),\n        ]).then(\n            ([responseAlunos, responseProfessores]) => {\n                const valoresResponseAlunos = responseAlunos.data;\n                const valoresResponseProfessores = responseProfessores.data;\n\n                console.log(\"Alunos cadastrados na semana: \")\n                console.log(valoresResponseAlunos);\n                console.log(\"Professores cadastrados na semana: \")\n                console.log(valoresResponseProfessores);\n\n                setAlunosCadastrados(valoresResponseAlunos);\n                setProfessoresCadastrados(valoresResponseProfessores);\n            }\n        ).catch((err) => {\n            adicionaAviso({\n                mensagem: \"Erro ao carregar usuários cadastrados na semana\",\n                tipo: \"erro\"\n            });\n        });\n    }, []);\n\n\n    const qtdTotalAlunosCadastrados = alunosCadastrados.reduce((a, b) => a + b, 0);\n    const qtdTotalprofessoresCadastrados = professoresCadastrados.reduce((a, b) => a + b, 0);\n    const qtdTotalUsuarios = qtdTotalAlunosCadastrados + qtdTotalprofessoresCadastrados;\n\n    return (\n        <Card className=\"card-cadastro-usuario-semana\" titulo=\"Usuários cadastrados na semana\">\n            <Bar data={data} options={options}/>\n\n            <Box className=\"informacao-adicional-container\">\n            <InformacaoAdicionalGrafico nome=\"Alunos cadastrados:\" valor={qtdTotalAlunosCadastrados} valorTotal={qtdTotalUsuarios}/>\n            <InformacaoAdicionalGrafico nome=\"Professores cadastrados:\" valor={qtdTotalprofessoresCadastrados} valorTotal={qtdTotalUsuarios}/>\n            </Box>\n        </Card>\n    );\n}\n\nexport default UsuariosCadastradosSemana;","import { useState, useEffect } from 'react';\nimport { verificarToken } from \"../../../utils/index.js\";\n\n/* Componentes */\nimport EstruturaPaginaUsuario from \"../../../components/Global/EstruturaPaginaUsuario/Main/index.jsx\";\nimport { Box } from \"@mui/material\";\nimport Metricas from \"../../../components/Admin/Dashboard/Graficos/Metricas/index.jsx\";\nimport UsuariosCadastrados from \"../../../components/Admin/Dashboard/Graficos/Novo/UsuariosCadastradosMes/index.jsx\";\nimport AulasSemana from '../../../components/Admin/Dashboard/Graficos/Novo/AulaSemana/index.jsx';\nimport AulasInfo from '../../../components/Admin/Dashboard/Graficos/AulasInfo/index.jsx';\nimport AulasMes from '../../../components/Admin/Dashboard/Graficos/Novo/AulasMes/index.jsx';\nimport api from '../../../api.js';\n\n/* import Mapa from \"../../../components/Admin/Dashboard/MapaBrasil/index.jsx\"; */\n/* Css */\nimport \"./style.css\";\nimport { useNavigate } from 'react-router-dom';\nimport UsuariosCadastradosSemana from '../../../components/Admin/Dashboard/Graficos/Novo/UsuariosCadastradosSemana/index.jsx';\n\nconst requisicaoGet = (url) => {\n    return api.get(url, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` } });\n}\n\nfunction DashboardAdmin(props) {\n    const [avisos, setAvisos] = useState([]);\n\n    const adicionaAviso = (novoAviso) => {\n        setAvisos([...avisos, novoAviso]);\n    }\n\n    const [metricas, setMetricas] = useState([\n        {\n            id: 1,\n            nome: \"Usuários\",\n            endpoint: \"/usuarios/quantidade-cadastrados-mes-soma\",\n            valor: 0,\n        },\n        {\n            id: 2,\n            nome: \"Aulas por aluno\",\n            endpoint: \"/aulas/quantidade-por-aluno-mes\",\n            valor: 0,\n        },\n        {\n            id: 3,\n            nome: \"Aulas\",\n            endpoint: \"/aulas/quantidade-mes\",\n            valor: 0,\n        },\n        {\n            id: 4,\n            nome: \"Rendimento dos Professores\",\n            endpoint: \"/professores/dashboard/rendimentoTotal\",\n            valor: 0,\n        }\n    ]);\n\n    const [valorAulas, setValorAulas] = useState([\n        {\n            id: 1,\n            nome: \"Aulas Realizadas\",\n            endpoint: \"/pedidos/quantidade-realizadas-semana-total\",\n            valor: 0,\n        }, {\n            id: 2,\n            nome: \"Aulas Pendentes\",\n            endpoint: \"/pedidos/quantidade-pendentes-semana-total\",\n            valor: 0,\n        }, {\n            id: 3,\n            nome: \"Aulas Canceladas\",\n            endpoint: \"/pedidos/quantidade-canceladas-semana-total\",\n            valor: 0,\n        }\n    ]);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if (verificarToken()) navigate(\"/login\");\n\n        metricas.forEach(metrica => {\n            if (metrica.id !== 4) {\n                requisicaoGet(metrica.endpoint).then((resposta) => {\n                    setMetricas(metricas => metricas.map(metricaAntiga => {\n                        if (metricaAntiga.id === metrica.id) {\n                            metricaAntiga.valor = resposta.data;\n                        }\n                        return metricaAntiga;\n                    }));\n            }).catch(() => adicionaAviso({\n                mensagem: `Erro ao obter quantidade de ${metrica.nome}`,\n                tipo: \"erro\"\n            }));\n            }\n        });\n\n        valorAulas.forEach(valorAula => {\n            if (valorAula.id !== 4) {\n                requisicaoGet(valorAula.endpoint).then((resposta) => {\n                    setValorAulas(valorAulas => [...valorAulas.map(valorAulaAntigo => {\n                        if (valorAulaAntigo.id === valorAula.id) {\n                            valorAulaAntigo.valor = resposta.data;\n                        }\n                        return valorAulaAntigo;\n                    })])\n                }).catch(() => adicionaAviso({\n                    mensagem: `Erro ao obter quantidade de ${valorAula.nome}`,\n                    tipo: \"erro\"\n                }));\n            }\n        });\n    }, []);\n\n    return (\n        <EstruturaPaginaUsuario tela=\"dashboard\" avisosState={{ avisos, setAvisos }}>\n            <Box className=\"pagina-container\">\n                <Metricas metricas={metricas} />\n                <Box className=\"secao secao-usuarios-retidos-cadastrados\">\n                    <AulasMes />\n                    <UsuariosCadastrados adicionaAviso={adicionaAviso} />\n                    <UsuariosCadastradosSemana adicionaAviso={adicionaAviso} />\n                </Box>\n                <Box className=\"secao secao-aulas\">\n                <AulasSemana adicionaAviso={adicionaAviso}/>\n                    <AulasInfo className=\"realizadas\" titulo=\"Aulas Realizadas na semana\" valor={valorAulas[0].valor} />\n                    <AulasInfo className=\"pendentes\" titulo=\"Aulas Pendentes na semana\" valor={valorAulas[1].valor} />\n                    <AulasInfo className=\"canceladas\" titulo=\"Aulas Canceladas na semana\" valor={valorAulas[2].valor} />\n                </Box>\n            </Box>\n        </EstruturaPaginaUsuario>\n    );\n}\n\nexport default DashboardAdmin; ","import axios from 'axios';\n\nfunction verificarToken() {\n    let token = sessionStorage.TOKEN;\n\n    if (token === null || token === \"\" || token.length < 186) {\n        sessionStorage.TOKEN = \"\";\n        return true;\n    }\n\n    return false;\n}\n\nfunction validaDataNascimento(dataNascimento) {\n    dataNascimento = dataNascimento.split('/');\n    let dia = dataNascimento[0];\n    let mes = dataNascimento[1];\n    let ano = dataNascimento[2];\n\n    if (dia < 1 || dia > 31) return { error: true, helperText: 'Dia inválido' };\n    else if (mes < 1 || mes > 12) return { error: true, helperText: 'Mês inválido' };\n    else if (ano < 1900 || ano > new Date().getFullYear()) return { error: true, helperText: 'Ano inválido' };\n\n    let data = new Date(ano, mes - 1, dia), dataAtual = new Date();\n\n    if (data > dataAtual) {\n        return {\n            error: true,\n            helperText: 'Data de Nascimento inválida'\n        }\n    }\n\n    return {\n        error: false,\n    };\n}\n\nasync function consultaCep(cep) {\n    let dadosViaCep = {}\n\n    await axios.get(`https://viacep.com.br/ws/${cep}/json/`)\n        .then((res) => {\n\n            if (res.data.erro) dadosViaCep = null;\n            else dadosViaCep = res.data;\n\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n\n    console.log(\"Resposta:\")\n    console.log(dadosViaCep)\n    return dadosViaCep;\n}\n\nexport {\n    verificarToken,\n    validaDataNascimento,\n    consultaCep\n};"],"names":["props","_jsx","Box","className","concat","sx","id","onClick","children","_jsxs","Card","Typography","titulo","metricas","map","metrica","nome","valor","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","options","scales","x","grid","display","drawBorder","borderWidth","y","plugins","legend","position","align","labels","usePointStyle","requisicaoGet","url","api","headers","Authorization","sessionStorage","TOKEN","_useState","useState","_useState2","_slicedToArray","setLabels","_useState3","_useState4","quantidadeTotalUsuarios","setQuantidadeTotalUsuarios","_useState5","_useState6","usuariosMesAtual","setUsuariosMesAtual","_useState7","_useState8","usuariosMesAnterior","setUsuariosMesAnterior","adicionaAviso","data","datasets","label","fill","backgroundColor","borderColor","pointRadius","useEffect","then","response","valores","console","log","dias","i","length","push","reduce","a","b","catch","mensagem","tipo","Line","BarElement","diasSemanaResumido","diasSemanaTraduzido","responsive","stacked","interaction","intersect","mode","title","tooltip","callbacks","toolTipItem","criarDataset","cor","tension","aulasRealizadas","setAulasRealizadas","aulasPendentes","setAulasPendentes","aulasCanceladas","setAulasCanceladas","Promise","all","_ref","_ref2","responseRealizadas","responsepPendentes","responseCanceladas","realizadas","pendentes","canceladas","erro","Bar","type","min","y1","drawOnChartArea","aulasMes","setAulasMes","rendimentoMes","setRendimentoMes","yAxisID","resposta","porcentagem","setPorcentagem","total","toFixed","alunosCadastrados","setAlunosCadastrados","professoresCadastrados","setProfessoresCadastrados","responseAlunos","responseProfessores","valoresResponseAlunos","valoresResponseProfessores","err","qtdTotalAlunosCadastrados","qtdTotalprofessoresCadastrados","qtdTotalUsuarios","InformacaoAdicionalGrafico","valorTotal","avisos","setAvisos","novoAviso","_toConsumableArray","endpoint","setMetricas","valorAulas","setValorAulas","navigate","useNavigate","verificarToken","forEach","metricaAntiga","valorAula","valorAulaAntigo","EstruturaPaginaUsuario","tela","avisosState","Metricas","AulasMes","UsuariosCadastrados","UsuariosCadastradosSemana","AulasSemana","AulasInfo","token","validaDataNascimento","dataNascimento","dia","split","mes","ano","error","helperText","Date","getFullYear","consultaCep","_x","_consultaCep","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","cep","dadosViaCep","wrap","_context","prev","next","axios","res","abrupt","stop"],"sourceRoot":""}