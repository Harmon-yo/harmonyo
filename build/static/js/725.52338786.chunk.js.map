{"version":3,"file":"static/js/725.52338786.chunk.js","mappings":"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","sources":["components/Global/Card/index.jsx","pages/Global/PerfilExibicaoUsuario/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <Box className={`card ${props.className}`} sx={props.sx} id={props.id} onClick={props.onClick}>\r\n            {props.children}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Card;","import React, { useEffect, useState } from \"react\";\r\nimport EstruturaPaginaUsuario from \"../../../components/Global/EstruturaPaginaUsuario/Main\";\r\nimport { Box, Rating, Button, Typography } from \"@mui/material\";\r\nimport Card from \"../../../components/Global/Card\";\r\nimport \"./style.css\";\r\nimport api from \"../../../api.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AvatarComFoto from \"../../../components/Global/AvatarComFoto\";\r\n\r\nfunction PerfilExibicaoUsuario() {\r\n\r\n  const [formData, setFormData] = useState({\r\n    nome: '',\r\n    avaliacaoMedia: 0.0,\r\n    categoria: '',\r\n    bibliografia: '',\r\n    bairro: '',\r\n    cidade: '',\r\n    estado: '',\r\n    experiencias: [],\r\n  });\r\n\r\n  const [formRating, setRating] = useState({\r\n    avaliacoes: [],\r\n  });\r\n\r\n  const [formInstruments, setInstruments] = useState({\r\n    instrumentos: [],\r\n  });\r\n\r\n\r\n  const [formTimeResponse, setFormTimeResponse] = useState({\r\n    tempoMedio: \"\",\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n  const idUsuario = new URLSearchParams(window.location.search).get(\"id\");\r\n\r\n  useEffect(() => {\r\n    if (idUsuario) {\r\n      console.log(idUsuario);\r\n\r\n      obterDadosUsuario();\r\n      obterAvaliacoesUsuario();\r\n      obterInstrumentos();\r\n      obterTempoMedioDeResposta();\r\n\r\n      function obterDadosUsuario() {\r\n        api.get(`/usuarios/dados-perfil/${idUsuario}`, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` } })\r\n          .then(response => {\r\n\r\n            let dadosUsuario = response.data;\r\n\r\n            // Dados pessoais do usuÃ¡rio\r\n            setFormData({\r\n              ...formData,\r\n              nome: dadosUsuario.nome,\r\n              email: dadosUsuario.email,\r\n              categoria: dadosUsuario.categoriaUsuario,\r\n              avaliacaoMedia: dadosUsuario.avaliacaoMedia,\r\n              bibliografia: dadosUsuario.bibliografia,\r\n              bairro: dadosUsuario.endereco.bairro,\r\n              cidade: dadosUsuario.endereco.cidade,\r\n              estado: dadosUsuario.endereco.estado,\r\n              experiencias: dadosUsuario.experiencia,\r\n            })\r\n          })\r\n          .catch(err => {\r\n            console.log(err)\r\n          })\r\n      }\r\n\r\n      function obterAvaliacoesUsuario() {\r\n        api.get(`/usuarios/${idUsuario}/avaliacoes`, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` } })\r\n          .then(response => {\r\n\r\n            let avaliacoesUsuario = response.data;\r\n\r\n            setRating({\r\n              ...formRating,\r\n              avaliacoes: avaliacoesUsuario,\r\n            })\r\n          })\r\n          .catch(err => {\r\n            console.log(err)\r\n          })\r\n      }\r\n\r\n      function obterInstrumentos() {\r\n\r\n        let categoria = \"\";\r\n\r\n        if (formData.categoria === \"Professor\") {\r\n          categoria = \"professores\";\r\n        } else {\r\n          categoria = \"alunos\";\r\n        }\r\n\r\n        api.get(`/${categoria}/${idUsuario}/instrumentos`, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` } })\r\n          .then(response => {\r\n\r\n            let instrumentosUsuario = response.data;\r\n\r\n            setInstruments({\r\n              ...formInstruments,\r\n              instrumentos: instrumentosUsuario,\r\n            })\r\n          })\r\n          .catch(err => {\r\n            console.log(err)\r\n          })\r\n      }\r\n\r\n      function obterTempoMedioDeResposta() {\r\n\r\n        api.get(`/professores/dashboard/mes-atual/media-tempo-resposta/${idUsuario}`, { headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` } })\r\n          .then(response => {\r\n            let tempo = response.data;\r\n\r\n            let horas = Math.floor(tempo / 60);\r\n            let minutos = tempo % 60;\r\n            let dias = Math.floor(horas / 24);\r\n\r\n            horas = horas % 24;\r\n\r\n            let texto = \"\";\r\n\r\n            if (dias === 1) texto += \" dia \";\r\n            else if (dias > 0) texto += \" dias \";\r\n\r\n            if (horas === 1) texto += \" hora \";\r\n            else if (horas > 0) texto += \" horas \";\r\n\r\n            if (minutos === 1) texto += \" minuto \";\r\n            else if (minutos > 0) texto += \" minutos \"; \r\n            \r\n            setFormTimeResponse({\r\n              ...formTimeResponse,\r\n              tempoMedio: texto,\r\n            })\r\n          })\r\n          .catch(err => {\r\n            console.log(err)\r\n          })\r\n\r\n\r\n      }\r\n    } else {\r\n      navigate(-1);\r\n    }\r\n  }, [])\r\n\r\n  console.log(formData);\r\n  console.log(formRating);\r\n  console.log(formInstruments);\r\n  console.log(formTimeResponse);\r\n\r\n  const handleClickAgendar = () => {\r\n    navigate(`/pedido?id=${idUsuario}`);\r\n  }\r\n\r\n  return (\r\n    <EstruturaPaginaUsuario className=\"teste\">\r\n      <Box className=\"pagina\">\r\n        <Box className=\"pagina-perfil\">\r\n          <Card className=\"card-perfil\">\r\n            <Box className=\"topo-card\">\r\n              <AvatarComFoto\r\n                id={idUsuario}\r\n                nome={formData.nome}\r\n                className=\"avatar-perfil\"\r\n                sx={{ width: 100, height: 100, fontSize: '45px' }} />\r\n              {formData.categoria === \"Professor\" && formTimeResponse.tempoMedio !== \"\" ?\r\n                <>\r\n                  <Box className=\"duracao\">\r\n                    <Typography variant=\"h8\" component=\"h3\">Tempo mÃ©dio de resposta</Typography>\r\n                    <Box>{formTimeResponse.tempoMedio}</Box>\r\n                  </Box>\r\n                </> : null\r\n              }\r\n            </Box>\r\n            <Box className=\"nome\">{formData.nome}</Box>\r\n            <Box className=\"categoria\">{formData.categoria}</Box>\r\n            <Box className=\"avaliacao-usuario\">\r\n              <Rating value={formData.avaliacaoMedia} readOnly></Rating>\r\n              <Box className=\"avaliacao-numero\">{formData.avaliacaoMedia}</Box>\r\n            </Box>\r\n            <Box className=\"instrumentos\">\r\n              {formInstruments.instrumentos.map((instrumento) => {\r\n                return (\r\n                  <>\r\n                    <Box className=\"item-instumento\">{instrumento.nome}</Box>\r\n                  </>\r\n                )\r\n              })}\r\n            </Box>\r\n            <Box>{formData.estado} - {formData.cidade} - {formData.bairro}</Box>\r\n            {formData.categoria === \"Professor\" ?\r\n              <>\r\n                <Box className=\"box-agendar\">\r\n                  <Button className=\"botao\" onClick={handleClickAgendar}>Agende uma aula</Button>\r\n                </Box>\r\n              </> : null\r\n            }</Card>\r\n        </Box>\r\n        <Box className=\"pagina-informacoes\">\r\n          <Card className=\"card-geral\">\r\n            <Box className=\"card-titulo\">Biografia</Box>\r\n            <Box>{\r\n              formData.bibliografia !== \"\" ? formData.bibliografia : \"Sem biografia\"\r\n            }</Box>\r\n          </Card>\r\n\r\n          {formData.categoria === \"Professor\" ?\r\n            <>\r\n              <Card className=\"card-geral\">\r\n                <Box className=\"card-titulo\">FormaÃ§Ãµes</Box>\r\n                {\r\n                  formData.experiencias.length !== 0 ?\r\n                    <Box>\r\n                      {formData.experiencias.map((experiencia) => {\r\n                        return (\r\n                          <Box className=\"box-experiencia\">\r\n                            <Box className=\"titulo-experiencia\">{experiencia.titulo}</Box>\r\n                            <Box className=\"descricao-experiencia\">{experiencia.descricao}</Box>\r\n                          </Box>\r\n                        )\r\n                      })}\r\n                    </Box> : \"Sem formaÃ§Ãµes\"\r\n                }\r\n              </Card>\r\n            </> : null\r\n          }\r\n          {formRating.avaliacoes.length !== 0 ?\r\n            <Card className=\"card-geral\">\r\n              <Box className=\"card-titulo\">AvaliaÃ§Ãµes</Box>\r\n              {formRating.avaliacoes.map((avaliacao) => {\r\n\r\n                return (\r\n                  <>\r\n                    <Box className=\"avaliacao\">\r\n                      <Box className=\"avaliacao-head\">\r\n                        <Box>\r\n                          <AvatarComFoto\r\n                            id={avaliacao.usuarioAvaliador.id}\r\n                            nome={formData.nome}\r\n                            sx={{ width: 50, height: 50 }}\r\n                          />\r\n                        </Box>\r\n                        <Box>\r\n                          <Box className=\"avaliacao-titulo\">\r\n                            <Box className=\"avaliacao-nome\">{avaliacao.usuarioAvaliador.nome}</Box>\r\n                            <Rating value={avaliacao.valor} readOnly></Rating>\r\n                            <Box className=\"avaliacao-numero\">{avaliacao.valor}</Box>\r\n                          </Box>\r\n                          <Box className=\"avaliacao-data\">{avaliacao.dataAvaliacao}</Box>\r\n                        </Box>\r\n                      </Box><Box className=\"avaliacao-texto\">{avaliacao.comentario}</Box>\r\n                    </Box>\r\n                  </>\r\n                )\r\n              })}\r\n            </Card> : null\r\n          }\r\n        </Box>\r\n      </Box >\r\n    </EstruturaPaginaUsuario >\r\n  );\r\n}\r\n\r\n\r\nexport default PerfilExibicaoUsuario;"],"names":["props","_jsx","Box","className","concat","sx","id","onClick","children","_useState","useState","nome","avaliacaoMedia","categoria","bibliografia","bairro","cidade","estado","experiencias","_useState2","_slicedToArray","formData","setFormData","_useState3","avaliacoes","_useState4","formRating","setRating","_useState5","instrumentos","_useState6","formInstruments","setInstruments","_useState7","tempoMedio","_useState8","formTimeResponse","setFormTimeResponse","navigate","useNavigate","idUsuario","URLSearchParams","window","location","search","get","useEffect","console","log","api","headers","Authorization","sessionStorage","TOKEN","then","response","dadosUsuario","data","_objectSpread","email","categoriaUsuario","endereco","experiencia","catch","err","avaliacoesUsuario","instrumentosUsuario","obterInstrumentos","tempo","horas","Math","floor","minutos","dias","texto","EstruturaPaginaUsuario","_jsxs","Card","AvatarComFoto","width","height","fontSize","_Fragment","Typography","variant","component","Rating","value","readOnly","map","instrumento","Button","length","titulo","descricao","avaliacao","usuarioAvaliador","valor","dataAvaliacao","comentario"],"sourceRoot":""}