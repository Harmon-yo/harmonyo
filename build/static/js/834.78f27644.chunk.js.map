{"version":3,"file":"static/js/834.78f27644.chunk.js","mappings":"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","sources":["components/Global/Card/index.jsx","components/Professor/Dashboard/KpiDashboard/index.jsx","components/Professor/Dashboard/TabelaMinhasAulas/LinhaTabelaMinhasAulas/index.jsx","components/Professor/Dashboard/TabelaMinhasAulas/index.jsx","components/Professor/Dashboard/GraficoDonut/index.jsx","components/Professor/Dashboard/GraficoBarraEmpilhada/index.jsx","pages/Professor/Dashboard/Dashboard.jsx","utils/index.js"],"sourcesContent":["import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <Box className={`card ${props.className}`} sx={props.sx} id={props.id} onClick={props.onClick}>\r\n            {props.children}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Card;","import React, { useEffect } from \"react\";\r\nimport Card from \"../../../Global/Card/index.jsx\";\r\nimport { CircularProgress, LinearProgress, Typography } from \"@mui/material\";\r\nimport api from \"../../../../api.js\";\r\nimport { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction KpiDashboard(props) {\r\n  const [valor, setValor] = useState(\"0,00\");\r\n  const [carregando, setCarregando] = useState(true);\r\n  \r\n  const config = {\r\n    headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` },\r\n  };\r\n \r\n  useEffect(() => {\r\n\r\n    if (props.titulo === \"Rendimento total\") {\r\n      setValor(getRendimentoTotal());\r\n    } else if (props.titulo === \"Quantidade de alunos\") {\r\n      setValor(getQuantidadeAlunos());\r\n    } else if (props.titulo === \"Quantidade de aulas\") {\r\n      setValor(getQuantidadeAulas());\r\n    } else if (props.titulo === \"Tempo de resposta\") {\r\n      setValor(getTempoResposta());\r\n    }\r\n  }, [props.periodo]);\r\n\r\n  function getRendimentoTotal() {\r\n    var periodo = \"\";\r\n    if (props.periodo === 0) {\r\n      periodo = \"mes-atual\";\r\n    } else if (props.periodo === 1) {\r\n      periodo = \"ano-atual\";\r\n    } else{\r\n      periodo = \"total\";\r\n    }\r\n\r\n    var url =\r\n      `/professores/dashboard/${periodo}/rendimento/` + sessionStorage.ID;\r\n    api.get(url, config).then((response) => {\r\n      console.log(url);\r\n      setCarregando(false);\r\n      setValor(\"R$ \" + response.data);\r\n    });\r\n  }\r\n  function getQuantidadeAlunos() {\r\n    var periodo = \"\";\r\n    if (props.periodo === 0) {\r\n      periodo = \"mes-atual\";\r\n    } else if (props.periodo === 1) {\r\n      periodo = \"ano-atual\";\r\n    } else{\r\n      periodo = \"total\";\r\n    }\r\n\r\n    var url =\r\n      `/professores/dashboard/${periodo}/qtd-alunos/` + sessionStorage.ID;\r\n    api.get(url, config).then((response) => {\r\n      setCarregando(false);\r\n      setValor(response.data);\r\n    });\r\n  }\r\n  function getQuantidadeAulas() {\r\n    var periodo = \"\";\r\n    if (props.periodo === 0) {\r\n      periodo = \"mes-atual\";\r\n    } else if (props.periodo === 1) {\r\n      periodo = \"ano-atual\";\r\n    } else{\r\n      periodo = \"total\";\r\n    }\r\n    var url =\r\n      `/professores/dashboard/${periodo}/qtd-aulas/` + sessionStorage.ID;\r\n    api.get(url, config).then((response) => {\r\n      setCarregando(false);\r\n      setValor(response.data);\r\n    });\r\n  }\r\n  function getTempoResposta() {\r\n    var periodo = \"\";\r\n    if (props.periodo === 0) {\r\n      periodo = \"mes-atual\";\r\n    } else if (props.periodo === 1) {\r\n      periodo = \"ano-atual\";\r\n    } else{\r\n      periodo = \"total\";\r\n    }\r\n    var url =\r\n      `/professores/dashboard/${periodo}/media-tempo-resposta/` +\r\n      sessionStorage.ID;\r\n    api.get(url, config).then((response) => {\r\n      if(response.data === 0){\r\n        setValor(\"Sem dados\");\r\n        setCarregando(false);\r\n        return;\r\n      }\r\n      var minutos = response.data;\r\n      var horas = Math.floor(minutos / 60);\r\n      var minutos = minutos % 60;\r\n      var dias = Math.floor(horas / 24);\r\n      var horas = horas % 24;\r\n      var texto = \"\";\r\n      if (dias > 0) {\r\n        if (dias == 1) {\r\n          texto += dias + \" dia \";\r\n        } else {\r\n          texto += dias + \" dias \";\r\n        }\r\n      }\r\n      if (horas > 0) {\r\n        if (horas == 1) {\r\n          texto += horas + \" hora \";\r\n        } else {\r\n          texto += horas + \" horas \";\r\n        }\r\n      }\r\n      if (minutos > 0) {\r\n        if (minutos == 1) {\r\n          texto += minutos + \" minuto \";\r\n        } else {\r\n          texto += minutos + \" minutos \";\r\n        }\r\n      }\r\n\r\n      setCarregando(false);\r\n      setValor(texto);\r\n    });\r\n  }\r\n  \r\n  if (carregando) {\r\n    return (\r\n      <Card className=\"kpi-item\">\r\n        <CircularProgress style={{ color: \"#16B364\" }} />\r\n      </Card>\r\n    );\r\n  } else {\r\n    return (\r\n      <Card className=\"kpi-item\">\r\n        <Typography className=\"kpi-titulo\">{props.titulo}</Typography>\r\n        <Typography className=\"kpi-valor\" >{valor}</Typography>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KpiDashboard;","import { TableCell, TableRow, Typography, Tooltip as TooltipMaterial } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport \"../../../../../pages/Professor/Dashboard/style.css\";\r\n\r\nfunction LinhaTabelaMinhasAulas(props) {\r\n\r\n    \r\n\r\n\r\n  return (\r\n    <TableRow\r\n      key={props.item.idInstrumento}\r\n      sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n    >\r\n      <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n        <TooltipMaterial title={props.item.nomeInstrumento} placement=\"right\">\r\n          \r\n        <Typography >{props.item.nomeInstrumento}</Typography>\r\n     </TooltipMaterial>\r\n      </TableCell>\r\n      <TableCell align=\"center\">\r\n        <Typography variant=\"subtitle1\">{props.item.quantidadeAulas}</Typography>\r\n      </TableCell>\r\n      <TableCell align=\"center\">\r\n        <Typography variant=\"subtitle1\">R$ {props.item.rendimentoTotal}</Typography>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nexport default LinhaTabelaMinhasAulas;\r\n","import {\r\n  Box,\r\n  CircularProgress,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport Card from \"../../../Global/Card/index.jsx\";\r\nimport \"../../../../pages/Professor/Dashboard/style.css\";\r\nimport LinhaTabelaMinhasAulas from \"./LinhaTabelaMinhasAulas/index.jsx\";\r\nimport api from \"../../../../api.js\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./style.css\";\r\nfunction TabelaMinhasAulas(props) {\r\n  const [carregando, setCarregando] = useState(true);\r\n  const config = {\r\n    headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` },\r\n  };\r\n  const [dados, setDados] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDadosTabela();\r\n  }, [props.periodo]);\r\n\r\n  function getDadosTabela() {\r\n    console.log(props.periodo);\r\n    if (props.periodo === 0) {\r\n      api\r\n        .get(\r\n          \"/professores/dashboard/minhas-aulas-mes/\" + sessionStorage.ID,\r\n          config\r\n        )\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          setCarregando(false);\r\n          setDados(response.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else if (props.periodo === 1) {\r\n      api\r\n        .get(\r\n          \"/professores/dashboard/minhas-aulas-ano/\" + sessionStorage.ID,\r\n          config\r\n        )\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          setCarregando(false);\r\n          setDados(response.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }else{\r\n      api\r\n        .get(\r\n          \"/professores/dashboard/minhas-aulas-total/\" + sessionStorage.ID,\r\n          config\r\n        )\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          setCarregando(false);\r\n          setDados(response.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className=\"card-tabela\">\r\n      <Typography className=\"chart-title\" variant=\"h5\">\r\n        Minhas aulas\r\n      </Typography>\r\n      <Box className=\"chart-instrumentos-container\">\r\n        <TableContainer sx={{ width: \"99%\", maxHeight: \" !important\" }}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Instrumento</TableCell>\r\n                <TableCell align=\"center\">Quantidade Aulas</TableCell>\r\n                <TableCell align=\"center\">Rendimento total</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {!carregando && dados.length === 0 ? (\r\n                <TableRow>\r\n                  <TableCell align=\"center\" colSpan={3}>\r\n                    Nenhuma aula encontrada\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : carregando ? (\r\n                <CircularProgress style={{ color: \"#16B364\" }} />\r\n              ) : dados ? (\r\n                dados.map((item) => <LinhaTabelaMinhasAulas item={item} />)\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default TabelaMinhasAulas;\r\n","import React from \"react\";\r\nimport api from \"../../../../api\";\r\nimport { useEffect } from \"react\";\r\nimport Card from \"../../../Global/Card/index.jsx\";\r\nimport { Box, CircularProgress, Typography } from \"@mui/material\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { useState } from \"react\";\r\nimport \"./style.css\";\r\nimport {\r\n  Chart as ChartJS,\r\n  Legend,\r\n  Title,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Tooltip,\r\n  BarElement,\r\n  ArcElement,\r\n} from \"chart.js\";\r\nChartJS.register(\r\n  Legend,\r\n  Title,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Tooltip,\r\n  ArcElement\r\n);\r\n\r\nfunction GraficoDonut() {\r\n  const [aulasCanceladas, setAulasCanceladas] = useState(0);\r\n  const [aulasRealizadas, setAulasRealizadas] = useState(0);\r\n  const [aulasRecusadas, setaulasRecusadas] = useState(0);\r\n  const [carregando, setCarregando] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getDados();\r\n  }, []);\r\n\r\n  const config = {\r\n    headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` },\r\n  };\r\n\r\n  function getDados() {\r\n    api\r\n      .get(\r\n        \"/professores/dashboard/grafico/aulas-realizadas-mes-atual/\" +\r\n          sessionStorage.ID,\r\n        config\r\n      )\r\n      .then((response) => {\r\n        setAulasRealizadas(response.data.aulasRealizadas);\r\n        setAulasCanceladas(response.data.aulasCanceladas);\r\n        setaulasRecusadas(response.data.aulasRecusadas);\r\n        setCarregando(false);\r\n      });\r\n  }\r\n\r\n  const chartDataDoughnut = {\r\n    labels: [\"Canceladas\", \"Realizadas\", \"Recusadas\"],\r\n    datasets: [\r\n      {\r\n        label: \"Quantidade de aulas\",\r\n        data: [aulasCanceladas, aulasRealizadas, aulasRecusadas],\r\n        backgroundColor: [\"#DF3939\", \"#39DF73\", \"#0263FF\"],\r\n        cutout: \"80%\",\r\n        hoverOffset: 4,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptionsDoughnut = {\r\n \r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: \"right\",\r\n      },\r\n      title: {\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  if (carregando) {\r\n    return (\r\n      <Card className=\"chart-card\">\r\n        <Typography className=\"chart-title\" variant=\"h5\">\r\n          Aulas nesse mês\r\n        </Typography>\r\n        <Box className=\"chart-info-container\">\r\n          <Box className=\"chart-container\">\r\n            <CircularProgress style={{ color: \"#16B364\" }} />\r\n          </Box>\r\n        </Box>\r\n      </Card>\r\n    );\r\n  } else {\r\n    console.log(aulasCanceladas, aulasRealizadas, aulasRecusadas)\r\n    if (\r\n      aulasCanceladas === 0 &&\r\n      aulasRealizadas === 0 &&\r\n      aulasRecusadas === 0\r\n    ) {\r\n     \r\n      return (\r\n        <Card className=\"chart-card\">\r\n          <Typography className=\"chart-title\" variant=\"h5\">\r\n            Aulas nesse mês\r\n          </Typography>\r\n          <Box className=\"chart-info-container\">\r\n            <Box className=\"chart-container\">\r\n              <Typography variant=\"h6\" className=\"chart-info\">\r\n                Nenhuma aula nesse mês\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </Card>\r\n      );\r\n\r\n    } else {\r\n      return (\r\n        <Card className=\"chart-card\">\r\n          <Typography className=\"chart-title\" variant=\"h5\">\r\n            Aulas nesse mês\r\n          </Typography>\r\n          <Box className=\"chart-info-container\">\r\n            <Doughnut options={chartOptionsDoughnut} data={chartDataDoughnut} />\r\n          </Box>\r\n        </Card>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default GraficoDonut;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport \"./style.css\";\r\nimport Card from \"../../../Global/Card\";\r\nimport api from \"../../../../api\";\r\n\r\nfunction GraficoBarraEmpilhada(props) {\r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n  );\r\n\r\n  const [carregando, setCarregando] = useState(true);\r\n  const [labels, setLabels] = useState([]);\r\n  const [aulasCanceladasDados, setAulasCanceladasDados] = useState([]);\r\n  const [aulasRecusadasDados, setAulasRecusadasDados] = useState([]);\r\n  const [aulasConcluidasDados, setAulasConcluidasDados] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDados();\r\n  }, [props.periodo]);\r\n\r\n  const config = {\r\n    headers: { Authorization: `Bearer ${sessionStorage.TOKEN}` },\r\n  };\r\n\r\n  function getDados() {\r\n\r\n    setLabels(\"\");\r\n    setAulasCanceladasDados([]);\r\n    setAulasConcluidasDados([]);\r\n    setAulasRecusadasDados([]);\r\n    setCarregando(true);\r\n    console.log(props.periodo)\r\n    api\r\n      .get(\r\n        `/professores/dashboard/dados-aulas-${props.periodo == 2 ? \"total\" : \"anual\" }/` + sessionStorage.ID,\r\n        config\r\n      )\r\n      .then((response) => {\r\n        let dadosResposta = response.data;\r\n        console.log(response)\r\n        const newLabels = dadosResposta.map((item) => item.mes);\r\n        const newAulasConcluidas = dadosResposta.map((item) => item.aulasConcluidas);\r\n        const newAulasCanceladas = dadosResposta.map((item) => item.aulasCanceladas);\r\n        const newAulasRecusadas = dadosResposta.map((item) => item.aulasRecusadas);\r\n\r\n        setLabels(newLabels);\r\n        setAulasCanceladasDados(newAulasCanceladas);\r\n        setAulasConcluidasDados(newAulasConcluidas);\r\n        setAulasRecusadasDados(newAulasRecusadas);\r\n\r\n        setCarregando(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  // Restante do código...\r\n  const options = {\r\n    plugins: {\r\n      title: {\r\n        display: false,\r\n        text: \"Chart.js Bar Chart - Stacked\",\r\n      },\r\n      legends: {\r\n        display: true,\r\n      },\r\n      pointStyle: \"circle\",\r\n    },\r\n\r\n    responsive: true,\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          display: false, // Configuração para ocultar as linhas verticais de grade no eixo x\r\n        },\r\n        stacked: true,\r\n      },\r\n      y: {\r\n        stacked: true,\r\n      },\r\n    },\r\n  };\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Aulas Canceladas\",\r\n        data: aulasCanceladasDados,\r\n        backgroundColor: \"#DF3939\",\r\n      },\r\n      {\r\n        label: \"Aulas Recusadas\",\r\n        data: aulasRecusadasDados,\r\n        backgroundColor: \"rgb(75, 192, 192)\",\r\n      },\r\n      {\r\n        label: \"Aulas Concluídas\",\r\n        data: aulasConcluidasDados,\r\n        backgroundColor: \"rgb(53, 162, 235)\",\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <Card className=\"card-tabela\">\r\n      <Typography className=\"chart-title\" variant=\"h5\">\r\n        Aulas por mês\r\n      </Typography>\r\n      {carregando ? (\r\n        <p>Carregando...</p>\r\n      ) : (\r\n        <Bar options={options} data={data} />\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default GraficoBarraEmpilhada;","import React, { useEffect } from \"react\";\r\n\r\nimport { Box, Tabs, Tab } from \"@mui/material\";\r\nimport \"./style.css\";\r\n\r\n/* ================= Componentes =================== */\r\n\r\nimport EstruturaPaginaUsuario from \"../../../components/Global/EstruturaPaginaUsuario/Main/index.jsx\";\r\nimport KpiDashboard from \"../../../components/Professor/Dashboard/KpiDashboard/index.jsx\";\r\nimport TabelaMinhasAulas from \"../../../components/Professor/Dashboard/TabelaMinhasAulas/index.jsx\";\r\nimport HistoricoAulasGraficoDonut from \"../../../components/Professor/Dashboard/GraficoDonut/index.jsx\";\r\nimport GraficoBarraEmpilhada from \"../../../components/Professor/Dashboard/GraficoBarraEmpilhada/index.jsx\";\r\n/* ================= Utils ================= */\r\nimport { verificarToken } from \"../../../utils/index.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction DashboardProfessor() {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (evento, novoValor) => {\r\n    setValue(novoValor);\r\n  };\r\n\r\n  function getTabProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      className: \"dashboard-professor-tabs-item\",\r\n      \"aria-controls\": `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (verificarToken()) {\r\n      navigate(-1);\r\n    }\r\n  }, []);\r\n  var visao = `Visão Anual - ${new Date().getFullYear()}`;\r\n  return (\r\n    <EstruturaPaginaUsuario tela=\"dashboard\">\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"tabs\"\r\n        className=\"dashboard-professor-tabs\"\r\n      >\r\n        <Tab label=\"Visão Mensal\" className=\"tab_dash\" {...getTabProps(0)} />\r\n        <Tab label={visao} className=\"tab_dash\" {...getTabProps(1)} />\r\n        <Tab label=\"Visão Total\" className=\"tab_dash\" {...getTabProps(2)} />\r\n\r\n      </Tabs>\r\n      <Box className=\"pagina-container-dash\">\r\n        {\r\n        value === 0 ? (\r\n          <>\r\n            <Box className=\"kpi-container\">\r\n              <KpiDashboard titulo=\"Rendimento total\" periodo={value}/>\r\n              <KpiDashboard titulo=\"Quantidade de alunos\" periodo={value}/>\r\n              <KpiDashboard titulo=\"Quantidade de aulas\" periodo={value} />\r\n              <KpiDashboard titulo=\"Tempo de resposta\" periodo={value} />\r\n            </Box>\r\n            <Box className=\"charts-container\">\r\n              <HistoricoAulasGraficoDonut />\r\n              <TabelaMinhasAulas periodo={value} />\r\n            </Box>\r\n          </>\r\n        ) : value === 1 ? (\r\n          <>\r\n            <Box className=\"kpi-container\">\r\n              <KpiDashboard titulo=\"Rendimento total\" periodo={value}/>\r\n              <KpiDashboard titulo=\"Quantidade de alunos\" periodo={value}/>\r\n              <KpiDashboard titulo=\"Quantidade de aulas\" periodo={value}/>\r\n              <KpiDashboard titulo=\"Tempo de resposta\" periodo={value}/>\r\n            </Box>\r\n            <Box className=\"charts-container\">\r\n              <GraficoBarraEmpilhada />\r\n              <TabelaMinhasAulas periodo={value}/>\r\n            </Box>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Box className=\"kpi-container\">\r\n              <KpiDashboard titulo=\"Rendimento total\" />\r\n              <KpiDashboard titulo=\"Quantidade de alunos\" />\r\n              <KpiDashboard titulo=\"Quantidade de aulas\" />\r\n              <KpiDashboard titulo=\"Tempo de resposta\" />\r\n            </Box>\r\n            <Box className=\"charts-container\">\r\n              <GraficoBarraEmpilhada periodo={value} />\r\n              <TabelaMinhasAulas periodo={value}/>\r\n            </Box>\r\n      \r\n          </>\r\n        )}\r\n      </Box>\r\n    </EstruturaPaginaUsuario>\r\n  );\r\n}\r\n\r\nexport default DashboardProfessor;\r\n","import axios from 'axios';\r\n\r\nfunction verificarToken() {\r\n    let token = sessionStorage.TOKEN;\r\n\r\n    if (token === null || token === \"\" || token.length < 186) {\r\n        sessionStorage.TOKEN = \"\";\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction validaDataNascimento(dataNascimento) {\r\n    dataNascimento = dataNascimento.split('/');\r\n    let dia = dataNascimento[0];\r\n    let mes = dataNascimento[1];\r\n    let ano = dataNascimento[2];\r\n\r\n    if (dia < 1 || dia > 31) return { error: true, helperText: 'Dia inválido' };\r\n    else if (mes < 1 || mes > 12) return { error: true, helperText: 'Mês inválido' };\r\n    else if (ano < 1900 || ano > new Date().getFullYear()) return { error: true, helperText: 'Ano inválido' };\r\n\r\n    let data = new Date(ano, mes - 1, dia), dataAtual = new Date();\r\n\r\n    if (data > dataAtual) {\r\n        return {\r\n            error: true,\r\n            helperText: 'Data de Nascimento inválida'\r\n        }\r\n    }\r\n\r\n    return {\r\n        error: false,\r\n    };\r\n}\r\n\r\nasync function consultaCep(cep) {\r\n    let dadosViaCep = {}\r\n\r\n    await axios.get(`https://viacep.com.br/ws/${cep}/json/`)\r\n        .then((res) => {\r\n\r\n            if (res.data.erro) dadosViaCep = null;\r\n            else dadosViaCep = res.data;\r\n\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n\r\n    console.log(\"Resposta:\")\r\n    console.log(dadosViaCep)\r\n    return dadosViaCep;\r\n}\r\n\r\nexport {\r\n    verificarToken,\r\n    validaDataNascimento,\r\n    consultaCep\r\n};"],"names":["props","_jsx","Box","className","concat","sx","id","onClick","children","_useState","useState","_useState2","_slicedToArray","valor","setValor","_useState3","_useState4","carregando","setCarregando","config","headers","Authorization","sessionStorage","TOKEN","useEffect","titulo","periodo","url","ID","api","then","response","console","log","data","getRendimentoTotal","getQuantidadeAlunos","getQuantidadeAulas","minutos","horas","Math","floor","dias","texto","getTempoResposta","Card","CircularProgress","style","color","_jsxs","Typography","TableRow","border","TableCell","component","scope","align","TooltipMaterial","title","item","nomeInstrumento","placement","variant","quantidadeAulas","rendimentoTotal","idInstrumento","dados","setDados","catch","err","TableContainer","width","maxHeight","Table","TableHead","TableBody","length","map","LinhaTabelaMinhasAulas","_Fragment","colSpan","ChartJS","Legend","Title","CategoryScale","LinearScale","BarElement","Tooltip","ArcElement","aulasCanceladas","setAulasCanceladas","aulasRealizadas","setAulasRealizadas","_useState5","_useState6","aulasRecusadas","setaulasRecusadas","_useState7","_useState8","chartDataDoughnut","labels","datasets","label","backgroundColor","cutout","hoverOffset","Doughnut","options","plugins","legend","display","position","setLabels","aulasCanceladasDados","setAulasCanceladasDados","aulasRecusadasDados","setAulasRecusadasDados","_useState9","_useState10","aulasConcluidasDados","setAulasConcluidasDados","dadosResposta","newLabels","mes","newAulasConcluidas","aulasConcluidas","newAulasCanceladas","newAulasRecusadas","Bar","text","legends","pointStyle","responsive","scales","x","grid","stacked","y","_React$useState","React","_React$useState2","value","setValue","getTabProps","index","navigate","useNavigate","verificarToken","visao","Date","getFullYear","EstruturaPaginaUsuario","tela","Tabs","onChange","evento","novoValor","Tab","_objectSpread","KpiDashboard","HistoricoAulasGraficoDonut","TabelaMinhasAulas","GraficoBarraEmpilhada","token","validaDataNascimento","dataNascimento","dia","split","ano","error","helperText","consultaCep","_x","_consultaCep","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","cep","dadosViaCep","wrap","_context","prev","next","axios","res","erro","abrupt","stop"],"sourceRoot":""}